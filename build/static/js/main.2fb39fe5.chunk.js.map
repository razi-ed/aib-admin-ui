{"version":3,"sources":["modules/auth/components/auth-layout/index.js","modules/common/constants/auth.constants.js","modules/common/constants/action-status.constants.js","modules/common/lib/http-client.js","modules/common/lib/dev-util.js","modules/common/services/auth/auth.api.js","modules/common/services/auth/auth.slice.js","modules/auth/pages/login/index.js","modules/categories/constants/index.js","modules/authors/constants/index.js","modules/coaches/constants/index.js","modules/courses/constants/index.js","modules/common/components/layout/index.js","modules/users/components/modal/index.js","modules/users/components/form/index.jsx","modules/common/components/loading-spinner/index.js","modules/users/services/user.api.js","modules/users/services/user.slice.js","modules/users/pages/users.jsx","modules/categories/components/modal/index.js","modules/categories/components/form/index.jsx","modules/categories/services/api.js","modules/categories/services/slice.js","modules/categories/pages/index.jsx","modules/authors/components/modal/index.js","modules/authors/components/form/index.jsx","modules/authors/services/api.js","modules/authors/services/slice.js","modules/authors/pages/index.jsx","modules/coaches/components/modal/index.js","modules/coaches/components/form/index.jsx","modules/coaches/services/api.js","modules/coaches/services/slice.js","modules/coaches/pages/index.jsx","modules/courses/pages/list.jsx","modules/courses/services/api.js","modules/courses/services/slice.js","modules/courses/pages/upsert.jsx","modules/courses/pages/basic.jsx","modules/courses/pages/CreateSourceContainer.jsx","App.js","modules/common/lib/redux-store.js","index.js"],"names":["AuthLayout","props","id","className","authTokensStoragKeys","Object","freeze","actionStatuses","IDLE","PENDING","FULFILLED","REJECTED","httpOpenClient","Axios","create","baseURL","process","timeout","httpClient","assetHttpClient","addAuthHeaderToRequest","config","serializedAccessToken","window","localStorage","getItem","ACCESS","deserializedAccessToken","atob","accessToken","JSON","parse","token","headers","Authorization","errorHandler","error","response","status","removeItem","REFRESH","location","href","originalRequest","_retry","serializedRefreshToken","deserializedRefreshToken","refreshToken","now","Date","expires","post","then","data","btoa","stringify","access","refresh","setItem","Promise","reject","interceptors","request","use","undefined","errorLog","identifier","payload","loginApi","a","email","password","apiResponse","hasErrored","errorMessage","message","initialState","user","loginService","createAsyncThunk","tokens","authSlice","createSlice","name","extraReducers","builder","addCase","fulfilled","state","action","Login","navigate","useNavigate","useLocation","dispatch","useDispatch","from","pathname","onFinish","useCallback","values","unwrap","originalPromiseResult","replace","catch","rejectedValueOrSerializedError","onFinishFailed","errorInfo","console","log","labelCol","span","wrapperCol","initialValues","remember","autoComplete","Title","level","Item","label","rules","required","type","placeholder","Password","offset","htmlType","moduleName","Header","Layout","Sider","Content","HeaderUserOptionsMenu","disabled","to","danger","AppLayout","React","useState","collapsed","setCollapsed","userName","useSelector","store","auth","toggle","trigger","collapsible","theme","mode","selectedKeys","split","SubMenu","icon","GroupOutlined","title","capitalize","coursesModuleName","UserOutlined","FormOutlined","authorsModuleName","IdcardOutlined","coachesModuleName","TagOutlined","categoryModuleName","style","padding","MenuUnfoldOutlined","onClick","MenuFoldOutlined","Button","overlay","placement","WrappedModal","onClose","centered","visible","footer","onCancel","children","validateMessages","types","number","range","ManageForm","defaultValues","onSubmit","loading","layout","validateTrigger","initialValue","antIcon","LoadingOutlined","fontSize","spin","LoadingSpinner","indicator","getUsersApi","HttpClient","get","createUserApi","updateUserApi","userId","patch","deleteUserApi","delete","list","queryStatus","mutationStatus","getUsersService","upsertUserService","pickBy","value","deleteUserService","pending","results","UsersPage","params","userList","userListLoading","userMutatuionPending","useParams","Boolean","showModal","setShowModal","useEffect","closeManageModal","openManageModal","find","userObj","result","notification","description","duration","success","onDelete","columns","useMemo","dataIndex","key","sorter","compare","b","length","ellipsis","render","text","record","size","role","onConfirm","okText","cancelText","width","dataSource","rowKey","getApi","createApi","updateApi","deleteApi","getListService","upsertService","deleteService","slice","keyId","snakeCase","trim","obj","options","map","Option","designation","imageUrl","ListCoursePage","step","UpsertCoursePage","initialPanes","panes","activeModuleTabKey","setActiveModuleTabKey","categories","category","getCategoriesService","gutter","margin","TextArea","min","max","Group","onChange","activeKey","onEdit","tabPosition","pane","TabPane","tab","closable","UpsertCourseBasicDetailsPage","courseId","authorList","author","getAuthors","marginTop","rows","justify","align","CreateCourceContainer","current","Step","marginRight","getPage","App","includes","path","element","index","CategoryModuleName","AuthorsModuleName","CoachesModuleName","CourseModuleName","reducer","authReducer","userReducer","categoriesModuleName","categoryReducer","authorReducer","coachModuleName","coachReducer","courseModuleName","courseReducer","configureStore","devTools","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2fb39fe5.chunk.js","sourcesContent":["import { Outlet } from 'react-router-dom';\r\nimport { Card } from 'antd';\r\n\r\nimport './auth-layout.css'\r\n\r\nexport default function AuthLayout(props) {\r\n    return (\r\n        <section id=\"auth-layout\" className=\"cover-parent\">\r\n            <Card className=\"auth-layout-card\">\r\n                <Outlet />\r\n            </Card>\r\n        </section>\r\n    )\r\n}","export const authTokensStoragKeys = Object.freeze({\r\n    \"ACCESS\": \"Y9ZtYezvplulmCTV\",\r\n    \"REFRESH\": \"hRy4lBSoBbM8mv3K\",\r\n});","export const actionStatuses = Object.freeze({\r\n    IDLE : 'idle',\r\n    PENDING: 'pending',\r\n    FULFILLED: 'fulfilled',\r\n    REJECTED: 'rejected',\r\n})\r\n","import Axios from \"axios\";\r\nimport { authTokensStoragKeys } from \"../constants/auth.constants\";\r\n\r\nexport const httpOpenClient = Axios.create({\r\n    baseURL: process.env.REACT_APP_API,\r\n    timeout: 1000 * 15,\r\n});\r\n\r\nconst httpClient = Axios.create({\r\n    baseURL: process.env.REACT_APP_API,\r\n    timeout: 1000 * 15,\r\n});\r\n\r\nconst assetHttpClient = Axios.create({\r\n    baseURL: process.env.REACT_APP_ASSET_API,\r\n    timeout: 1000 * 15,\r\n});\r\n\r\nfunction addAuthHeaderToRequest(config) {\r\n\r\n    const serializedAccessToken = window.localStorage.getItem(authTokensStoragKeys.ACCESS)\r\n    const deserializedAccessToken = window.atob(serializedAccessToken);\r\n    const accessToken = deserializedAccessToken ? JSON.parse(deserializedAccessToken) : {};\r\n\r\n    if (!accessToken.token) {\r\n      return {\r\n        ...config,\r\n        // withCredentials: true,\r\n        headers: {\r\n          ...config.headers,\r\n        },\r\n      };\r\n    }\r\n  \r\n    return {\r\n        ...config,\r\n        // withCredentials: true,\r\n        headers: {\r\n            ...config.headers,\r\n            Authorization: `Bearer ${accessToken.token}`,\r\n        },\r\n    };\r\n};\r\n\r\nconst errorHandler = error => {\r\n    if (error.response.status === 403) {\r\n        window.localStorage.removeItem(authTokensStoragKeys.ACCESS)\r\n        window.localStorage.removeItem(authTokensStoragKeys.REFRESH)\r\n        window.location.href = '/auth/login';\r\n    }\r\n    if (error.response.status === 401) {\r\n        const originalRequest = error.config;\r\n        if (!originalRequest._retry) {\r\n            const serializedRefreshToken = window.localStorage.getItem(authTokensStoragKeys.REFRESH);\r\n            const deserializedRefreshToken = window.atob(serializedRefreshToken);\r\n            const refreshToken = deserializedRefreshToken ? JSON.parse(deserializedRefreshToken) : null;\r\n            const now = Date.now();\r\n            if (refreshToken && refreshToken.token && refreshToken.expires && now < new Date(refreshToken.expires)) {\r\n                originalRequest._retry = true;\r\n                return Axios.post(`${process.env.REACT_APP_API}/auth/refresh-tokens`, { refreshToken: refreshToken.token })\r\n                .then(({data}) => {\r\n                    const serializedAccessToken = window.btoa(JSON.stringify(data.access));\r\n                    const serializedRefreshToken = window.btoa(JSON.stringify(data.refresh));\r\n                    window.localStorage.setItem(authTokensStoragKeys.ACCESS, serializedAccessToken)\r\n                    window.localStorage.setItem(authTokensStoragKeys.REFRESH, serializedRefreshToken)\r\n                    originalRequest.headers['Authorization'] = 'Bearer ' + data.access.token;\r\n                    return Axios(originalRequest);\r\n                });\r\n            }\r\n        }\r\n        window.localStorage.removeItem(authTokensStoragKeys.ACCESS)\r\n        window.localStorage.removeItem(authTokensStoragKeys.REFRESH)\r\n        window.location.href = '/auth/login';\r\n    }\r\n    return Promise.reject(error);\r\n};\r\n\r\n  \r\nhttpClient.interceptors.request.use(\r\n    addAuthHeaderToRequest,\r\n    undefined\r\n);\r\n\r\nhttpClient.interceptors.response.use(\r\n    undefined,\r\n    errorHandler,\r\n);\r\n\r\nassetHttpClient.interceptors.request.use(\r\n    addAuthHeaderToRequest,\r\n    undefined\r\n);\r\n\r\nassetHttpClient.interceptors.response.use(\r\n    undefined,\r\n    errorHandler,\r\n);\r\n\r\nexport default httpClient;\r\n\r\nexport { assetHttpClient };","export function errorLog(identifier, payload) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        console.error({ [identifier]: payload });\r\n    }\r\n}","import { httpOpenClient } from \"../../lib/http-client\";\r\nimport { errorLog } from \"../../lib/dev-util\";\r\n\r\nexport async function loginApi({ email, password }) {\r\n    let response = {}\r\n    try {\r\n        const apiResponse = await httpOpenClient.post('/auth/login', { email, password }, );\r\n        if (apiResponse.status === 200) {\r\n            response = apiResponse.data;\r\n        } else if (apiResponse.status === 401) {\r\n            response = {\r\n                hasErrored: true,\r\n                errorMessage: apiResponse.data.message,\r\n            }\r\n        }\r\n    } catch (error) {\r\n        errorLog('login-api', error)\r\n        response = {\r\n            hasErrored: true,\r\n            errorMessage: error.message,\r\n            error,\r\n        }\r\n    } finally {\r\n        return response;\r\n    }\r\n}","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { authTokensStoragKeys } from '../../constants/auth.constants';\r\nimport { actionStatuses } from '../../constants/action-status.constants';\r\nimport { loginApi } from './auth.api';\r\n\r\nconst initialState = {\r\n  user: {},\r\n  status: actionStatuses.IDLE\r\n}\r\n\r\nexport const loginService = createAsyncThunk(\r\n    'auth/login',\r\n    async (payload) => {\r\n        const response = await loginApi(payload);\r\n        if (response.user && response.tokens) {\r\n            const serializedAccessToken = window.btoa(JSON.stringify(response.tokens.access));\r\n            const serializedRefreshToken = window.btoa(JSON.stringify(response.tokens.refresh));\r\n            window.localStorage.setItem(authTokensStoragKeys.ACCESS, serializedAccessToken)\r\n            window.localStorage.setItem(authTokensStoragKeys.REFRESH, serializedRefreshToken)\r\n        }\r\n        return response;\r\n    }\r\n);\r\n\r\nexport const authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: (builder) => {\r\n    // Add reducers for additional action types here, and handle loading state as needed\r\n    builder.addCase(loginService.fulfilled, (state, action) => {\r\n      const { user, hasErrored = false } = action.payload;\r\n      if (hasErrored) {\r\n        state.status = actionStatuses.REJECTED;\r\n        state.user = {};\r\n      } else {\r\n        state.user = user;\r\n      }\r\n    })\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\n// export const {} = authSlice.actions\r\n\r\nexport default authSlice.reducer","import { useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { Form, Input, Button, Divider, Typography } from \"antd\";\r\n\r\nimport { loginService } from '../../../common/services/auth/auth.slice'\r\n\r\n\r\nimport \"./login.css\";\r\n\r\nexport default function Login(props) {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const from = location.state?.from?.pathname || \"/portal/\";\r\n  \r\n  const onFinish = useCallback((values) => {\r\n    dispatch(loginService(values))\r\n    .unwrap()\r\n    .then((originalPromiseResult) => {\r\n      const { user } = originalPromiseResult;\r\n      if (user) {\r\n        navigate(from, { replace: true });;\r\n      }\r\n    })\r\n    .catch((rejectedValueOrSerializedError) => {\r\n      // handle error here\r\n    })\r\n  }, [dispatch, from, navigate]);\r\n\r\n  const onFinishFailed = useCallback((errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  }, []);\r\n\r\n    return (\r\n        <Form\r\n            name=\"login\"\r\n            labelCol={{\r\n                span: 8,\r\n            }}\r\n            wrapperCol={{\r\n                span: 16,\r\n            }}\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n            autoComplete\r\n        >\r\n            <Typography.Title level={3} className=\"login-title\">Welcome to AIB Admin Portal</Typography.Title>\r\n            <Divider />\r\n            <Form.Item\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                rules={[\r\n                {\r\n                    required: true,\r\n                    message: \"Please input your email!\",\r\n                },\r\n                ]}\r\n            >\r\n                <Input type=\"email\" placeholder=\"Input your email\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                rules={[\r\n                {\r\n                    required: true,\r\n                    message: \"Please input your password!\",\r\n                },\r\n                ]}\r\n            >\r\n                <Input.Password placeholder=\"Input your password\"/>\r\n            </Form.Item>\r\n\r\n            {/* <Form.Item\r\n                name=\"remember\"\r\n                valuePropName=\"checked\"\r\n                wrapperCol={{\r\n                    offset: 8,\r\n                    span: 16,\r\n                }}\r\n            >\r\n                <Checkbox>Remember me</Checkbox>\r\n            </Form.Item> */}\r\n\r\n            <Form.Item\r\n                wrapperCol={{\r\n                    offset: 8,\r\n                    span: 16,\r\n                }}\r\n                >\r\n                    <div\r\n                        className=\"login-btn-container\"\r\n                    >\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Login\r\n                        </Button>\r\n                    </div>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n}\r\n","export const moduleName = 'category';","export const moduleName = 'author';","export const moduleName = 'coach';","export const moduleName = 'course';","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link, Outlet, useLocation } from 'react-router-dom';\r\nimport { Layout, Menu, Dropdown, Divider } from 'antd';\r\nimport { capitalize } from 'lodash';\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  FormOutlined,\r\n  TagOutlined,\r\n  IdcardOutlined,\r\n  GroupOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport { moduleName as categoryModuleName } from '../../../categories/constants';\r\nimport { moduleName as authorsModuleName } from '../../../authors/constants';\r\nimport { moduleName as coachesModuleName } from '../../../coaches/constants';\r\nimport { moduleName as coursesModuleName } from '../../../courses/constants';\r\n\r\nimport './layout.css';\r\n\r\nconst { Header, Sider, Content } = Layout;\r\n\r\nconst HeaderUserOptionsMenu = (\r\n  <Menu>\r\n    <Menu.Item disabled key=\"user-options-profile\">\r\n      <Link to=\"/profile\">\r\n        Profile\r\n      </Link>\r\n    </Menu.Item>\r\n    <Divider key=\"user-options-divider\" className=\"applayout-user-options-divider\" />\r\n    <Menu.Item danger key=\"user-options-logout\">Logout</Menu.Item>\r\n  </Menu>\r\n)\r\n\r\nexport default function AppLayout(props) {\r\n  const [collapsed, setCollapsed] = React.useState(false);\r\n  const { pathname } = useLocation();\r\n  const userName = useSelector((store) => store.auth?.user?.name || 'Welcome!');\r\n\r\n  const toggle = React.useCallback(() => {\r\n    setCollapsed(!collapsed);\r\n  }, [collapsed]);\r\n\r\n  return (\r\n    <Layout className=\"cover-parent\">\r\n      <Sider trigger={null} collapsible collapsed={collapsed}>\r\n        <div className=\"logo\" />\r\n        <Menu theme=\"dark\" mode=\"inline\" selectedKeys={[pathname.split('/')[2] || '']}>\r\n          <Menu.SubMenu key={coursesModuleName} icon={<GroupOutlined />} title={`${capitalize(coursesModuleName)}`}>\r\n            <Menu.Item key={`${coursesModuleName}/create`}>\r\n              <Link to={`/portal/${coursesModuleName}/create`}>\r\n                {`Create ${capitalize(coursesModuleName)}`}\r\n              </Link>\r\n            </Menu.Item>\r\n            <Menu.Item key={`${coursesModuleName}/list`}>\r\n              <Link to={`/portal/${coursesModuleName}/list`}>\r\n                {`All ${capitalize(coursesModuleName)}s`}\r\n              </Link>\r\n            </Menu.Item>\r\n          </Menu.SubMenu>\r\n          <Menu.Item key=\"Users\" icon={<UserOutlined />} a>\r\n            <Link to=\"/portal/users\">Users</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key={authorsModuleName} icon={<FormOutlined />}>\r\n            <Link to={`/portal/${authorsModuleName}`}>{`${capitalize(authorsModuleName)}`}</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key={coachesModuleName} icon={<IdcardOutlined />}>\r\n            <Link to={`/portal/${coachesModuleName}`}>{`${capitalize(coachesModuleName)}`}</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key={categoryModuleName} icon={<TagOutlined />}>\r\n            <Link to={`/portal/${categoryModuleName}`}>{`${capitalize(categoryModuleName)}`}</Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n      <Layout className=\"site-layout\">\r\n        <Header className=\"site-layout-background\" style={{ padding: 0 }}>\r\n          {\r\n            collapsed ?\r\n              <MenuUnfoldOutlined className=\"trigger\" onClick={toggle} /> :\r\n              <MenuFoldOutlined className=\"trigger\" onClick={toggle} />\r\n          }\r\n          <div className=\"applayout-header-items-container\">\r\n            <Dropdown.Button overlay={HeaderUserOptionsMenu} placement=\"bottomRight\" icon={<UserOutlined />} >\r\n              {userName}\r\n            </Dropdown.Button>\r\n          </div>\r\n        </Header>\r\n        <Content\r\n          className=\"applayout-content\"\r\n        >\r\n          <Outlet />\r\n        </Content>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\n","import { Modal } from 'antd';\r\n\r\nexport default function WrappedModal(props) {\r\n    const {\r\n        onClose,\r\n        title\r\n    } = props;\r\n    return(\r\n        <Modal\r\n          title={title}\r\n          centered\r\n          visible\r\n          footer={null}\r\n          onCancel={onClose}\r\n        >\r\n          {props.children}\r\n        </Modal>\r\n    )\r\n}","import { Form, Input, Button } from 'antd';\r\n\r\nimport './manage-form.css'\r\n\r\n/* eslint-disable no-template-curly-in-string */\r\nconst validateMessages = {\r\n  required: '${label} is required!',\r\n  types: {\r\n    email: '${label} is not a valid email!',\r\n  },\r\n  number: {\r\n    range: '${label} must be between ${min} and ${max}',\r\n  },\r\n};\r\n/* eslint-enable no-template-curly-in-string */\r\n\r\nexport default function ManageForm(props) {\r\n\r\n  const { defaultValues = {}, onCancel, onSubmit, loading } = props\r\n\r\n  return (\r\n    <Form\r\n        layout=\"vertical\"\r\n        name=\"nest-messages\"\r\n        onFinish={onSubmit}\r\n        validateMessages={validateMessages}\r\n        validateTrigger=\"onSubmit\"\r\n    >\r\n        <Form.Item name={'name'} label=\"Name\" rules={[{ required: true }]} initialValue={defaultValues.name}>\r\n            <Input />\r\n        </Form.Item>\r\n        <Form.Item name={'email'} label=\"Email\" rules={[{ type: 'email' }, { required: true }]} initialValue={defaultValues.email}>\r\n            <Input />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <div className=\"user-manage-form-action-container\">\r\n            <Button type=\"primary\" htmlType=\"submit\" disabled={loading}>\r\n                Submit\r\n            </Button>\r\n            <Button onClick={onCancel} disabled={loading}>\r\n                Cancel\r\n            </Button>\r\n          </div>\r\n        </Form.Item>\r\n    </Form>\r\n  );\r\n};","import { Spin } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst antIcon = <LoadingOutlined style={{ fontSize: 64 }} spin />;\r\n\r\nexport default function LoadingSpinner() {\r\n    return(\r\n        <div className=\"cover-parent flex-center\">\r\n            <Spin indicator={antIcon} />\r\n        </div>\r\n    );\r\n}\r\n","import HttpClient from \"../../../modules/common/lib/http-client\";\r\nimport { errorLog } from \"../../../modules/common/lib/dev-util\";\r\n\r\nexport async function getUsersApi() {\r\n    let response = {}\r\n    try {\r\n        const apiResponse = await HttpClient.get('/users?sortBy=createdAt:desc&limit=100');\r\n        if (apiResponse.status === 200) {\r\n            const { data = {} } = apiResponse;\r\n            response = data;\r\n        }\r\n    } catch (error) {\r\n        errorLog('get-users-api', error)\r\n        response = {\r\n            hasErrored: true,\r\n            errorMessage: error.message,\r\n            error,\r\n        }\r\n    } finally {\r\n        return response;\r\n    }\r\n}\r\n\r\nexport async function createUserApi({ email, name }) {\r\n    let response = {}\r\n    try {\r\n        const apiResponse = await HttpClient.post('/users', { email, name }, );\r\n        if (apiResponse.status === 201) {\r\n            response = apiResponse.data;\r\n        } else {\r\n            response = {\r\n                hasErrored: true,\r\n                errorMessage: apiResponse?.data?.message,\r\n            }\r\n        }\r\n    } catch (error) {\r\n        errorLog('create-user-api', error)\r\n        response = {\r\n            hasErrored: true,\r\n            errorMessage: error.message,\r\n            error,\r\n        }\r\n    } finally {\r\n        return response;\r\n    }\r\n}\r\n\r\nexport async function updateUserApi(payload, userId) {\r\n    let response = {}\r\n    try {\r\n        const apiResponse = await HttpClient.patch(`/users/${userId}`, payload);\r\n        if (apiResponse.status === 200) {\r\n            response = apiResponse.data;\r\n        } else {\r\n            response = {\r\n                hasErrored: true,\r\n                errorMessage: apiResponse?.data?.message,\r\n            }\r\n        }\r\n    } catch (error) {\r\n        errorLog('update-user-api', error)\r\n        response = {\r\n            hasErrored: true,\r\n            errorMessage: error.message,\r\n            error,\r\n        }\r\n    } finally {\r\n        return response;\r\n    }\r\n}\r\n\r\nexport async function deleteUserApi(userId) {\r\n    let response = {}\r\n    try {\r\n        const apiResponse = await HttpClient.delete(`/users/${userId}`);\r\n        if (apiResponse.status === 204) {\r\n            response = {};\r\n        } else {\r\n            response = {\r\n                hasErrored: true,\r\n                errorMessage: apiResponse.data.message,\r\n            }\r\n        }\r\n    } catch (error) {\r\n        errorLog('delete-user-api', error)\r\n        response = {\r\n            hasErrored: true,\r\n            errorMessage: error.message,\r\n            error,\r\n        }\r\n    } finally {\r\n        return response;\r\n    }\r\n}\r\n\r\n","\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { pickBy } from 'lodash';\r\nimport { actionStatuses } from '../../../modules/common/constants/action-status.constants';\r\nimport { createUserApi, deleteUserApi, getUsersApi, updateUserApi } from './user.api';\r\n\r\nconst initialState = {\r\n  list: [],\r\n  queryStatus: actionStatuses.IDLE,\r\n  mutationStatus: actionStatuses.IDLE\r\n}\r\n\r\nexport const getUsersService = createAsyncThunk(\r\n    'user/getList',\r\n    async () => {\r\n        const response = await getUsersApi();\r\n        return response;\r\n    }\r\n);\r\n\r\nexport const upsertUserService = createAsyncThunk(\r\n    'user/upsert',\r\n    async ({name, email, id = null}) => {\r\n        let response = {};\r\n        if (id) {\r\n            response = await updateUserApi(\r\n                pickBy({name, email}, (value) => !!value),\r\n                id\r\n            );\r\n        } else {\r\n            response = await createUserApi({name, email});\r\n        }\r\n        return response;\r\n    }\r\n);\r\n\r\nexport const deleteUserService = createAsyncThunk(\r\n    'user/delete',\r\n    async (id = '') => {\r\n        const response = await deleteUserApi(id);\r\n        return response;\r\n    }\r\n);\r\n\r\nexport const authSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  extraReducers: (builder) => {\r\n    // Add reducers for additional action types here, and handle loading state as needed\r\n    builder.addCase(upsertUserService.pending, (state) => {\r\n      state.mutationStatus = actionStatuses.PENDING;\r\n    })\r\n    builder.addCase(upsertUserService.fulfilled, (state, action) => {\r\n      const { hasErrored = false } = action.payload;\r\n      if (hasErrored) {\r\n        state.mutationStatus = actionStatuses.REJECTED;\r\n      } else {\r\n        state.mutationStatus = actionStatuses.FULFILLED;\r\n      }\r\n    })\r\n\r\n    builder.addCase(getUsersService.pending, (state) => {\r\n      state.queryStatus = actionStatuses.PENDING;\r\n    })\r\n    builder.addCase(getUsersService.fulfilled, (state, action) => {\r\n      const { results, hasErrored = false } = action.payload;\r\n      if (hasErrored) {\r\n        state.queryStatus = actionStatuses.REJECTED;\r\n        state.list = [];\r\n      } else {\r\n        state.list = results;\r\n        state.queryStatus = actionStatuses.FULFILLED;\r\n      }\r\n    })\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\n// export const {} = authSlice.actions\r\n\r\nexport default authSlice.reducer","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { Button, Typography, Divider,Table, Space, Popconfirm, notification } from \"antd\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate, useLocation, useParams } from 'react-router-dom';\r\nimport { find } from \"lodash\";\r\n\r\nimport Modal from \"../components/modal\";\r\nimport Form from \"../components/form\";\r\n\r\nimport \"./page.css\";\r\nimport LoadingSpinner from \"../../common/components/loading-spinner\";\r\nimport { actionStatuses } from \"../../common/constants/action-status.constants\";\r\nimport { upsertUserService, getUsersService, deleteUserService } from \"../services/user.slice\";\r\n\r\nexport default function UsersPage(params) {\r\n    \r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const userList = useSelector(state => state.user.list)\r\n    const userListLoading = useSelector(state => state.user.queryStatus === actionStatuses.PENDING)\r\n    const userMutatuionPending = useSelector(state => state.user.mutationStatus === actionStatuses.PENDING)\r\n\r\n    const { userId = \"\" } = useParams();\r\n    \r\n    const [showModal, setShowModal] = useState(Boolean(userId));\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsersService());\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (Boolean(userId)) {\r\n            setShowModal(true)\r\n        } else {\r\n            setShowModal(false)\r\n        }\r\n    }, [userId])\r\n\r\n    const closeManageModal = useCallback(\r\n        () => {\r\n            if (userId) {\r\n                navigate(`/portal/users`)\r\n            } else {\r\n                setShowModal(false)\r\n            }\r\n        },\r\n        [userId, navigate]\r\n    )\r\n\r\n    const openManageModal = useCallback(\r\n        () => {\r\n            setShowModal(true)\r\n        },\r\n        [],\r\n    )\r\n\r\n    const onSubmit = useCallback(\r\n        (values) => {\r\n            if (userId) {\r\n                const userObj = find(userList, (userObj) => userObj.id === userId) || {};\r\n                if (userObj.email === values.email) {\r\n                    delete values.email;\r\n                }\r\n            }\r\n            dispatch(upsertUserService({...values, id: userId}))\r\n            .unwrap()\r\n            .then((result) => {\r\n                const { hasErrored = false } = result;\r\n                if (hasErrored) {\r\n                    notification.error({\r\n                        placement: 'topRight',\r\n                        message: `${userId ? 'Updation' : 'Creation'} failed`,\r\n                        description: `User ${userId ? 'updation' : 'creation'} has failed`,\r\n                        duration: 3\r\n                    })\r\n                } else {\r\n                    closeManageModal();\r\n                    dispatch(getUsersService());\r\n                    notification.success({\r\n                        placement: 'topRight',\r\n                        message: `${userId ? 'Updation' : 'Creation'} Success`,\r\n                        description: `User ${userId ? 'updation' : 'creation'} was successful`,\r\n                        duration: 3\r\n                    })\r\n                };\r\n            })\r\n            .catch((rejectedValueOrSerializedError) => {\r\n                notification.error({\r\n                    placement: 'topRight',\r\n                    message: `${userId ? 'Updation' : 'Creation'} failed`,\r\n                    description: `User ${userId ? 'updation' : 'creation'} has failed`,\r\n                    duration: 3\r\n                })\r\n            })\r\n        },\r\n        [userId, dispatch, userList, closeManageModal],\r\n    )\r\n\r\n    const onDelete = useCallback(\r\n        (id) => {\r\n            dispatch(deleteUserService(id))\r\n            .unwrap()\r\n            .then((result) => {\r\n                const { hasErrored = false } = result;\r\n                if (hasErrored) {\r\n                    notification.error({\r\n                        placement: 'topRight',\r\n                        message: `Removal failed`,\r\n                        description: `User removal has failed`,\r\n                        duration: 3\r\n                    })\r\n                } else {\r\n                    dispatch(getUsersService());\r\n                    notification.success({\r\n                        placement: 'topRight',\r\n                        message: `Removal Success`,\r\n                        description: `User removal was successful`,\r\n                        duration: 3\r\n                    })\r\n                };\r\n            })\r\n            .catch((rejectedValueOrSerializedError) => {\r\n                notification.error({\r\n                    placement: 'topRight',\r\n                    message: `Removal failed`,\r\n                    description: `User removal has failed`,\r\n                    duration: 3\r\n                })\r\n            })\r\n        },\r\n        [dispatch],\r\n    )\r\n\r\n    \r\nconst columns = useMemo(() => ([\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        sorter: {\r\n            compare: (a, b) => a.name.length - b.name.length,\r\n        },\r\n        ellipsis: true,\r\n    },\r\n    {\r\n        title: 'Email',\r\n        dataIndex: 'email',\r\n        key: 'email',\r\n        sorter: {\r\n            compare: (a, b) => a.email - b.email,\r\n        },\r\n        ellipsis: true,\r\n    },\r\n    {\r\n        title: 'Action',\r\n        key: 'action',\r\n        render: (text, record) => (\r\n            <Space size=\"middle\">\r\n                <Button\r\n                onClick={() =>{\r\n                    navigate(`/portal/users/${record.id}`)\r\n                }}\r\n                disabled={record.role === 'admin'}\r\n                >Edit User</Button>\r\n                <Popconfirm\r\n                    title=\"Are you sure to delete this user?\"\r\n                    onConfirm={() =>{onDelete(record.id)}}\r\n                    okText=\"Yes\"\r\n                    cancelText=\"No\"\r\n                    disabled={record.role === 'admin'}\r\n                >\r\n                    <Button\r\n                        danger \r\n                        disabled={record.role === 'admin'}\r\n                    >\r\n                        Delete User\r\n                    </Button>\r\n                </Popconfirm>\r\n            </Space>\r\n        ),\r\n        width: 240\r\n    },\r\n]), []);\r\n\r\nconst data = [\r\n    {\r\n      id: '1',\r\n      name: 'John Brown',\r\n      email: 'test@tmail.tom',\r\n    },\r\n    {\r\n      id: '2',\r\n      name: 'Jim Green',\r\n      email: 'test@tmail.tom',\r\n    },\r\n    {\r\n      id: '3',\r\n      name: 'Joe Black',\r\n      email: 'test@tmail.tom',\r\n    },\r\n  ];\r\n\r\n    if (userListLoading) {\r\n        return (\r\n            <LoadingSpinner />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"user-page-header\">\r\n                <Typography.Title level={3}>User Management</Typography.Title>\r\n                <Button type=\"primary\" onClick={openManageModal}>Add User</Button>\r\n            </div>\r\n            <Divider />\r\n            <Table \r\n                columns={columns}\r\n                dataSource={userList}\r\n                loading={false}\r\n                size=\"middle\"\r\n                rowKey=\"id\"\r\n            />\r\n            {\r\n                showModal ?\r\n                <Modal onClose={closeManageModal} title=\"Manage User\">\r\n                    <Form\r\n                        onCancel={closeManageModal}\r\n                        onSubmit={onSubmit}\r\n                        defaultValues={find(userList, (userObj) => userObj.id === userId) || {}}\r\n                        loading={userMutatuionPending}\r\n                    />\r\n                </Modal> :\r\n                null\r\n            }\r\n        </>\r\n    )\r\n}","import { Modal } from 'antd';\r\n\r\nexport default function WrappedModal(props) {\r\n    const {\r\n        onClose,\r\n        title\r\n    } = props;\r\n    return(\r\n        <Modal\r\n          title={title}\r\n          centered\r\n          visible\r\n          footer={null}\r\n          onCancel={onClose}\r\n        >\r\n          {props.children}\r\n        </Modal>\r\n    )\r\n}","import { Form, Input, Button } from 'antd';\r\n\r\nimport './manage-form.css'\r\n\r\n/* eslint-disable no-template-curly-in-string */\r\nconst validateMessages = {\r\n  required: '${label} is required!',\r\n  types: {\r\n    email: '${label} is not a valid email!',\r\n  },\r\n  number: {\r\n    range: '${label} must be between ${min} and ${max}',\r\n  },\r\n};\r\n/* eslint-enable no-template-curly-in-string */\r\n\r\nexport default function ManageForm(props) {\r\n\r\n  const { defaultValues = {}, onCancel, onSubmit, loading } = props\r\n\r\n  return (\r\n    <Form\r\n        layout=\"vertical\"\r\n        name=\"nest-messages\"\r\n        onFinish={onSubmit}\r\n        validateMessages={validateMessages}\r\n        validateTrigger=\"onSubmit\"\r\n    >\r\n        <Form.Item name={'label'} label=\"Label\" rules={[{ required: true }]} initialValue={defaultValues.label}>\r\n            <Input />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <div className=\"user-manage-form-action-container\">\r\n            <Button type=\"primary\" htmlType=\"submit\" disabled={loading}>\r\n                Submit\r\n            </Button>\r\n            <Button onClick={onCancel} disabled={loading}>\r\n                Cancel\r\n            </Button>\r\n          </div>\r\n        </Form.Item>\r\n    </Form>\r\n  );\r\n};","import HttpClient from \"../../../modules/common/lib/http-client\";\r\nimport { errorLog } from \"../../../modules/common/lib/dev-util\";\r\nimport { moduleName } from \"../constants\";\r\n\r\nexport async function getApi() {\r\n    let response = {}\r\n    try {\r\n        const apiResponse = await HttpClient.get(`/${moduleName}/`);\r\n        if (apiResponse.status === 200) {\r\n            const { data = [] } = apiResponse;\r\n            response = { results: data };\r\n        }\r\n    } catch (error) {\r\n        errorLog(`get-${moduleName}-api`, error)\r\n        response = {\r\n            hasErrored: true,\r\n            errorMessage: error.message,\r\n            error,\r\n        }\r\n    } finally {\r\n        return response;\r\n    }\r\n}\r\n\r\nexport async function createApi({ label, value }) {\r\n    let response = {}\r\n    try {\r\n        const apiResponse = await HttpClient.post(`/${moduleName}`, { label, value });\r\n        if (apiResponse.status === 201) {\r\n            response = apiResponse.data;\r\n        } else {\r\n            response = {\r\n                hasErrored: true,\r\n                errorMessage: apiResponse?.data?.message,\r\n            }\r\n        }\r\n    } catch (error) {\r\n        errorLog(`create-${moduleName}-api`, error)\r\n        response = {\r\n            hasErrored: true,\r\n            errorMessage: error.message,\r\n            error,\r\n        }\r\n    } finally {\r\n        return response;\r\n    }\r\n}\r\n\r\nexport async function updateApi(payload, value) {\r\n    let response = {}\r\n    try {\r\n        const apiResponse = await HttpClient.patch(`/${moduleName}/${value}`, payload);\r\n        if (apiResponse.status === 200) {\r\n            response = apiResponse.data;\r\n        } else {\r\n            response = {\r\n                hasErrored: true,\r\n                errorMessage: apiResponse?.data?.message,\r\n            }\r\n        }\r\n    } catch (error) {\r\n        errorLog(`update-${moduleName}-api`, error)\r\n        response = {\r\n            hasErrored: true,\r\n            errorMessage: error.message,\r\n            error,\r\n        }\r\n    } finally {\r\n        return response;\r\n    }\r\n}\r\n\r\nexport async function deleteApi(value) {\r\n    let response = {}\r\n    try {\r\n        const apiResponse = await HttpClient.delete(`/${moduleName}/${value}`);\r\n        if (apiResponse.status === 204) {\r\n            response = {};\r\n        } else {\r\n            response = {\r\n                hasErrored: true,\r\n                errorMessage: apiResponse.data.message,\r\n            }\r\n        }\r\n    } catch (error) {\r\n        errorLog(`delete-${moduleName}-api`, error)\r\n        response = {\r\n            hasErrored: true,\r\n            errorMessage: error.message,\r\n            error,\r\n        }\r\n    } finally {\r\n        return response;\r\n    }\r\n}\r\n\r\n","\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { actionStatuses } from '../../../modules/common/constants/action-status.constants';\r\nimport { moduleName } from '../constants';\r\nimport { createApi, deleteApi, getApi, updateApi } from './api';\r\n\r\nconst initialState = {\r\n  list: [],\r\n  queryStatus: actionStatuses.IDLE,\r\n  mutationStatus: actionStatuses.IDLE\r\n}\r\n\r\nexport const getListService = createAsyncThunk(\r\n    `${moduleName}/getList`,\r\n    async () => {\r\n        const response = await getApi();\r\n        return response;\r\n    }\r\n);\r\n\r\nexport const upsertService = createAsyncThunk(\r\n    `${moduleName}/upsert`,\r\n    async ({label, value, id = null}) => {\r\n        let response = {};\r\n        if (id) {\r\n            response = await updateApi({label}, id);\r\n        } else {\r\n            response = await createApi({label, value});\r\n        }\r\n        return response;\r\n    }\r\n);\r\n\r\nexport const deleteService = createAsyncThunk(\r\n    `${moduleName}/delete`,\r\n    async (id = '') => {\r\n        const response = await deleteApi(id);\r\n        return response;\r\n    }\r\n);\r\n\r\nexport const slice = createSlice({\r\n  name: moduleName,\r\n  initialState,\r\n  extraReducers: (builder) => {\r\n    // Add reducers for additional action types here, and handle loading state as needed\r\n    builder.addCase(upsertService.pending, (state) => {\r\n      state.mutationStatus = actionStatuses.PENDING;\r\n    })\r\n    builder.addCase(upsertService.fulfilled, (state, action) => {\r\n      const { hasErrored = false } = action.payload;\r\n      if (hasErrored) {\r\n        state.mutationStatus = actionStatuses.REJECTED;\r\n      } else {\r\n        state.mutationStatus = actionStatuses.FULFILLED;\r\n      }\r\n    })\r\n\r\n    builder.addCase(getListService.pending, (state) => {\r\n      state.queryStatus = actionStatuses.PENDING;\r\n    })\r\n    builder.addCase(getListService.fulfilled, (state, action) => {\r\n      const { results, hasErrored = false } = action.payload;\r\n      if (hasErrored) {\r\n        state.queryStatus = actionStatuses.REJECTED;\r\n        state.list = [];\r\n      } else {\r\n        state.list = results;\r\n        state.queryStatus = actionStatuses.FULFILLED;\r\n      }\r\n    })\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\n// export const {} = authSlice.actions\r\n\r\nexport default slice.reducer\r\n\r\nexport { moduleName };","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { Button, Typography, Divider,Table, Space, Popconfirm, notification } from \"antd\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { find, capitalize, snakeCase, trim } from \"lodash\";\r\n\r\nimport Modal from \"../components/modal\";\r\nimport Form from \"../components/form\";\r\n\r\nimport \"./page.css\";\r\nimport LoadingSpinner from \"../../common/components/loading-spinner\";\r\nimport { actionStatuses } from \"../../common/constants/action-status.constants\";\r\nimport { getListService, upsertService, deleteService, moduleName } from \"../services/slice\";\r\n\r\nexport { moduleName }\r\n\r\nexport default function UsersPage(params) {\r\n    \r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const list = useSelector(state => state[moduleName].list)\r\n    const loading = useSelector(state => state[moduleName].queryStatus === actionStatuses.PENDING)\r\n    const pending = useSelector(state => state[moduleName].mutationStatus === actionStatuses.PENDING)\r\n\r\n    const { keyId = \"\" } = useParams();\r\n    \r\n    const [showModal, setShowModal] = useState(Boolean(keyId));\r\n\r\n    useEffect(() => {\r\n        dispatch(getListService());\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (Boolean(keyId)) {\r\n            setShowModal(true)\r\n        } else {\r\n            setShowModal(false)\r\n        }\r\n    }, [keyId])\r\n\r\n    const closeManageModal = useCallback(\r\n        () => {\r\n            if (keyId) {\r\n                navigate(`/portal/${moduleName}`)\r\n            } else {\r\n                setShowModal(false)\r\n            }\r\n        },\r\n        [keyId, navigate]\r\n    )\r\n\r\n    const openManageModal = useCallback(\r\n        () => {\r\n            setShowModal(true)\r\n        },\r\n        [],\r\n    )\r\n\r\n    const onSubmit = useCallback(\r\n        ({label}) => {\r\n            const value = snakeCase(trim(label))\r\n            dispatch(upsertService({value, label, id: keyId}))\r\n            .unwrap()\r\n            .then((result) => {\r\n                const { hasErrored = false } = result;\r\n                if (hasErrored) {\r\n                    notification.error({\r\n                        placement: 'topRight',\r\n                        message: `${keyId ? 'Updation' : 'Creation'} failed`,\r\n                        description: `${capitalize(moduleName)} ${keyId ? 'updation' : 'creation'} has failed`,\r\n                        duration: 3\r\n                    })\r\n                } else {\r\n                    closeManageModal();\r\n                    dispatch(getListService());\r\n                    notification.success({\r\n                        placement: 'topRight',\r\n                        message: `${keyId ? 'Updation' : 'Creation'} Success`,\r\n                        description: `${capitalize(moduleName)} ${keyId ? 'updation' : 'creation'} was successful`,\r\n                        duration: 3\r\n                    })\r\n                };\r\n            })\r\n            .catch((rejectedValueOrSerializedError) => {\r\n                notification.error({\r\n                    placement: 'topRight',\r\n                    message: `${keyId ? 'Updation' : 'Creation'} failed`,\r\n                    description: `${capitalize(moduleName)} ${keyId ? 'updation' : 'creation'} has failed`,\r\n                    duration: 3\r\n                })\r\n            })\r\n        },\r\n        [keyId, dispatch, closeManageModal],\r\n    )\r\n\r\n    const onDelete = useCallback(\r\n        (id) => {\r\n            dispatch(deleteService(id))\r\n            .unwrap()\r\n            .then((result) => {\r\n                const { hasErrored = false } = result;\r\n                if (hasErrored) {\r\n                    notification.error({\r\n                        placement: 'topRight',\r\n                        message: `Removal failed`,\r\n                        description: `${capitalize(moduleName)} removal has failed`,\r\n                        duration: 3\r\n                    })\r\n                } else {\r\n                    dispatch(getListService());\r\n                    notification.success({\r\n                        placement: 'topRight',\r\n                        message: `Removal Success`,\r\n                        description: `${capitalize(moduleName)} removal was successful`,\r\n                        duration: 3\r\n                    })\r\n                };\r\n            })\r\n            .catch((rejectedValueOrSerializedError) => {\r\n                notification.error({\r\n                    placement: 'topRight',\r\n                    message: `Removal failed`,\r\n                    description: `${capitalize(moduleName)} removal has failed`,\r\n                    duration: 3\r\n                })\r\n            })\r\n        },\r\n        [dispatch],\r\n    )\r\n\r\n    \r\nconst columns = useMemo(() => ([\r\n    {\r\n        title: 'Label',\r\n        dataIndex: 'label',\r\n        key: 'label',\r\n        sorter: {\r\n            compare: (a, b) => a.label.length - b.label.length,\r\n        },\r\n        ellipsis: true,\r\n    },\r\n    {\r\n        title: 'Key',\r\n        dataIndex: 'value',\r\n        key: 'value',\r\n        sorter: {\r\n            compare: (a, b) => a.value - b.value,\r\n        },\r\n        ellipsis: true,\r\n    },\r\n    {\r\n        title: 'Action',\r\n        key: 'action',\r\n        render: (text, record) => (\r\n            <Space size=\"middle\">\r\n                <Button\r\n                onClick={() =>{\r\n                    navigate(`/portal/${moduleName}/${record.value}`)\r\n                }}\r\n                disabled={record.role === 'admin'}\r\n                >{`Edit ${capitalize(moduleName)}`}</Button>\r\n                <Popconfirm\r\n                    title={`Are you sure to delete this ${moduleName}?`}\r\n                    onConfirm={() =>{onDelete(record.value)}}\r\n                    okText=\"Yes\"\r\n                    cancelText=\"No\"\r\n                >\r\n                    <Button\r\n                        danger\r\n                    >\r\n                        {`Delete ${capitalize(moduleName)}`}\r\n                    </Button>\r\n                </Popconfirm>\r\n            </Space>\r\n        ),\r\n        width: 300\r\n    }]), []);\r\n\r\n\r\n    if (loading) {\r\n        return (\r\n            <LoadingSpinner />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"user-page-header\">\r\n                <Typography.Title level={3}>{`${capitalize(moduleName)} Management`}</Typography.Title>\r\n                <Button type=\"primary\" onClick={openManageModal}>{`Add ${capitalize(moduleName)}`}</Button>\r\n            </div>\r\n            <Divider />\r\n            <Table \r\n                columns={columns}\r\n                dataSource={list}\r\n                loading={false}\r\n                size=\"middle\"\r\n                rowKey=\"id\"\r\n            />\r\n            {\r\n                showModal ?\r\n                <Modal onClose={closeManageModal} title=\"Manage User\">\r\n                    <Form\r\n                        onCancel={closeManageModal}\r\n                        onSubmit={onSubmit}\r\n                        defaultValues={find(list, (obj) => obj.value === keyId) || {}}\r\n                        loading={pending}\r\n                    />\r\n                </Modal> :\r\n                null\r\n            }\r\n        </>\r\n    )\r\n}","import { Modal } from 'antd';\r\n\r\nexport default function WrappedModal(props) {\r\n    const {\r\n        onClose,\r\n        title\r\n    } = props;\r\n    return(\r\n        <Modal\r\n          title={title}\r\n          centered\r\n          visible\r\n          footer={null}\r\n          onCancel={onClose}\r\n        >\r\n          {props.children}\r\n        </Modal>\r\n    )\r\n}","import { Form, Input, Button, Select } from 'antd';\r\n\r\nimport './manage-form.css'\r\n\r\n/* eslint-disable no-template-curly-in-string */\r\nconst validateMessages = {\r\n  required: '${label} is required!',\r\n  types: {\r\n    email: '${label} is not a valid email!',\r\n  },\r\n  number: {\r\n    range: '${label} must be between ${min} and ${max}',\r\n  },\r\n};\r\n/* eslint-enable no-template-curly-in-string */\r\n\r\nexport default function ManageForm(props) {\r\n\r\n  const { defaultValues = {}, options = {}, onCancel, onSubmit, loading } = props\r\n\r\n  return (\r\n    <Form\r\n        layout=\"vertical\"\r\n        name=\"nest-messages\"\r\n        onFinish={onSubmit}\r\n        validateMessages={validateMessages}\r\n        validateTrigger=\"onSubmit\"\r\n    >\r\n        <Form.Item name={'name'} label=\"name\" rules={[{ required: true }]} initialValue={defaultValues.name}>\r\n            <Select>\r\n                { options.userList.length > 0 ? (\r\n                    options.userList.map(({name}) => (\r\n                        <Select.Option key={name} value={name}>{name}</Select.Option>\r\n                    ))\r\n                ) : null}\r\n            </Select>\r\n        </Form.Item>\r\n        <Form.Item name={'designation'} label=\"Designation\" rules={[{ required: true }]} initialValue={defaultValues.designation}>\r\n            <Input />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <div className=\"user-manage-form-action-container\">\r\n            <Button type=\"primary\" htmlType=\"submit\" disabled={loading}>\r\n                Submit\r\n            </Button>\r\n            <Button onClick={onCancel} disabled={loading}>\r\n                Cancel\r\n            </Button>\r\n          </div>\r\n        </Form.Item>\r\n    </Form>\r\n  );\r\n};","import HttpClient from \"../../../modules/common/lib/http-client\";\r\nimport { errorLog } from \"../../../modules/common/lib/dev-util\";\r\nimport { moduleName } from \"../constants\";\r\n\r\nexport async function getApi() {\r\n    let response = {}\r\n    try {\r\n        const apiResponse = await HttpClient.get(`/${moduleName}/`);\r\n        if (apiResponse.status === 200) {\r\n            const { data = [] } = apiResponse;\r\n            response = { results: data };\r\n        }\r\n    } catch (error) {\r\n        errorLog(`get-${moduleName}-api`, error)\r\n        response = {\r\n            hasErrored: true,\r\n            errorMessage: error.message,\r\n            error,\r\n        }\r\n    } finally {\r\n        return response;\r\n    }\r\n}\r\n\r\nexport async function createApi({ name, designation }) {\r\n    let response = {}\r\n    try {\r\n        const apiResponse = await HttpClient.post(`/${moduleName}`, { name, designation });\r\n        if (apiResponse.status === 201) {\r\n            response = apiResponse.data;\r\n        } else {\r\n            response = {\r\n                hasErrored: true,\r\n                errorMessage: apiResponse?.data?.message,\r\n            }\r\n        }\r\n    } catch (error) {\r\n        errorLog(`create-${moduleName}-api`, error)\r\n        response = {\r\n            hasErrored: true,\r\n            errorMessage: error.message,\r\n            error,\r\n        }\r\n    } finally {\r\n        return response;\r\n    }\r\n}\r\n\r\nexport async function updateApi(payload, value) {\r\n    let response = {}\r\n    try {\r\n        const apiResponse = await HttpClient.patch(`/${moduleName}/${value}`, payload);\r\n        if (apiResponse.status === 200) {\r\n            response = apiResponse.data;\r\n        } else {\r\n            response = {\r\n                hasErrored: true,\r\n                errorMessage: apiResponse?.data?.message,\r\n            }\r\n        }\r\n    } catch (error) {\r\n        errorLog(`update-${moduleName}-api`, error)\r\n        response = {\r\n            hasErrored: true,\r\n            errorMessage: error.message,\r\n            error,\r\n        }\r\n    } finally {\r\n        return response;\r\n    }\r\n}\r\n\r\nexport async function deleteApi(value) {\r\n    let response = {}\r\n    try {\r\n        const apiResponse = await HttpClient.delete(`/${moduleName}/${value}`);\r\n        if (apiResponse.status === 204) {\r\n            response = {};\r\n        } else {\r\n            response = {\r\n                hasErrored: true,\r\n                errorMessage: apiResponse.data.message,\r\n            }\r\n        }\r\n    } catch (error) {\r\n        errorLog(`delete-${moduleName}-api`, error)\r\n        response = {\r\n            hasErrored: true,\r\n            errorMessage: error.message,\r\n            error,\r\n        }\r\n    } finally {\r\n        return response;\r\n    }\r\n}\r\n\r\n","\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { actionStatuses } from '../../../modules/common/constants/action-status.constants';\r\nimport { moduleName } from '../constants';\r\nimport { createApi, deleteApi, getApi, updateApi } from './api';\r\n\r\nconst initialState = {\r\n  list: [],\r\n  queryStatus: actionStatuses.IDLE,\r\n  mutationStatus: actionStatuses.IDLE\r\n}\r\n\r\nexport const getListService = createAsyncThunk(\r\n    `${moduleName}/getList`,\r\n    async () => {\r\n        const response = await getApi();\r\n        return response;\r\n    }\r\n);\r\n\r\nexport const upsertService = createAsyncThunk(\r\n    `${moduleName}/upsert`,\r\n    async ({name, designation, id = null}) => {\r\n        let response = {};\r\n        if (id) {\r\n            response = await updateApi({name, designation}, id);\r\n        } else {\r\n            response = await createApi({name, designation});\r\n        }\r\n        return response;\r\n    }\r\n);\r\n\r\nexport const deleteService = createAsyncThunk(\r\n    `${moduleName}/delete`,\r\n    async (id = '') => {\r\n        const response = await deleteApi(id);\r\n        return response;\r\n    }\r\n);\r\n\r\nexport const slice = createSlice({\r\n  name: moduleName,\r\n  initialState,\r\n  extraReducers: (builder) => {\r\n    // Add reducers for additional action types here, and handle loading state as needed\r\n    builder.addCase(upsertService.pending, (state) => {\r\n      state.mutationStatus = actionStatuses.PENDING;\r\n    })\r\n    builder.addCase(upsertService.fulfilled, (state, action) => {\r\n      const { hasErrored = false } = action.payload;\r\n      if (hasErrored) {\r\n        state.mutationStatus = actionStatuses.REJECTED;\r\n      } else {\r\n        state.mutationStatus = actionStatuses.FULFILLED;\r\n      }\r\n    })\r\n\r\n    builder.addCase(getListService.pending, (state) => {\r\n      state.queryStatus = actionStatuses.PENDING;\r\n    })\r\n    builder.addCase(getListService.fulfilled, (state, action) => {\r\n      const { results, hasErrored = false } = action.payload;\r\n      if (hasErrored) {\r\n        state.queryStatus = actionStatuses.REJECTED;\r\n        state.list = [];\r\n      } else {\r\n        state.list = results;\r\n        state.queryStatus = actionStatuses.FULFILLED;\r\n      }\r\n    })\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\n// export const {} = authSlice.actions\r\n\r\nexport default slice.reducer\r\n\r\nexport { moduleName };","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { Button, Typography, Divider,Table, Space, Popconfirm, notification } from \"antd\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { find, capitalize } from \"lodash\";\r\n\r\nimport Modal from \"../components/modal\";\r\nimport Form from \"../components/form\";\r\n\r\nimport \"./page.css\";\r\nimport LoadingSpinner from \"../../common/components/loading-spinner\";\r\nimport { actionStatuses } from \"../../common/constants/action-status.constants\";\r\nimport { getListService, upsertService, deleteService, moduleName } from \"../services/slice\";\r\nimport { getUsersService } from \"../../users/services/user.slice\";\r\n\r\nexport { moduleName }\r\n\r\nexport default function UsersPage(params) {\r\n    \r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const list = useSelector(state => state[moduleName].list)\r\n    const userList = useSelector(state => state.user.list)\r\n    const loading = useSelector(state => state[moduleName].queryStatus === actionStatuses.PENDING)\r\n    const pending = useSelector(state => state[moduleName].mutationStatus === actionStatuses.PENDING)\r\n\r\n    const { keyId = \"\" } = useParams();\r\n    \r\n    const [showModal, setShowModal] = useState(Boolean(keyId));\r\n\r\n    useEffect(() => {\r\n        dispatch(getListService());\r\n        dispatch(getUsersService());\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (Boolean(keyId)) {\r\n            setShowModal(true)\r\n        } else {\r\n            setShowModal(false)\r\n        }\r\n    }, [keyId])\r\n\r\n    const closeManageModal = useCallback(\r\n        () => {\r\n            if (keyId) {\r\n                navigate(`/portal/${moduleName}`)\r\n            } else {\r\n                setShowModal(false)\r\n            }\r\n        },\r\n        [keyId, navigate]\r\n    )\r\n\r\n    const openManageModal = useCallback(\r\n        () => {\r\n            setShowModal(true)\r\n        },\r\n        [],\r\n    )\r\n\r\n    const onSubmit = useCallback(\r\n        ({name, designation}) => {\r\n            dispatch(upsertService({name, designation, id: keyId}))\r\n            .unwrap()\r\n            .then((result) => {\r\n                const { hasErrored = false } = result;\r\n                if (hasErrored) {\r\n                    notification.error({\r\n                        placement: 'topRight',\r\n                        message: `${keyId ? 'Updation' : 'Creation'} failed`,\r\n                        description: `${capitalize(moduleName)} ${keyId ? 'updation' : 'creation'} has failed`,\r\n                        duration: 3\r\n                    })\r\n                } else {\r\n                    closeManageModal();\r\n                    dispatch(getListService());\r\n                    notification.success({\r\n                        placement: 'topRight',\r\n                        message: `${keyId ? 'Updation' : 'Creation'} Success`,\r\n                        description: `${capitalize(moduleName)} ${keyId ? 'updation' : 'creation'} was successful`,\r\n                        duration: 3\r\n                    })\r\n                };\r\n            })\r\n            .catch((rejectedValueOrSerializedError) => {\r\n                notification.error({\r\n                    placement: 'topRight',\r\n                    message: `${keyId ? 'Updation' : 'Creation'} failed`,\r\n                    description: `${capitalize(moduleName)} ${keyId ? 'updation' : 'creation'} has failed`,\r\n                    duration: 3\r\n                })\r\n            })\r\n        },\r\n        [keyId, dispatch, closeManageModal],\r\n    )\r\n\r\n    const onDelete = useCallback(\r\n        (id) => {\r\n            dispatch(deleteService(id))\r\n            .unwrap()\r\n            .then((result) => {\r\n                const { hasErrored = false } = result;\r\n                if (hasErrored) {\r\n                    notification.error({\r\n                        placement: 'topRight',\r\n                        message: `Removal failed`,\r\n                        description: `${capitalize(moduleName)} removal has failed`,\r\n                        duration: 3\r\n                    })\r\n                } else {\r\n                    dispatch(getListService());\r\n                    notification.success({\r\n                        placement: 'topRight',\r\n                        message: `Removal Success`,\r\n                        description: `${capitalize(moduleName)} removal was successful`,\r\n                        duration: 3\r\n                    })\r\n                };\r\n            })\r\n            .catch((rejectedValueOrSerializedError) => {\r\n                notification.error({\r\n                    placement: 'topRight',\r\n                    message: `Removal failed`,\r\n                    description: `${capitalize(moduleName)} removal has failed`,\r\n                    duration: 3\r\n                })\r\n            })\r\n        },\r\n        [dispatch],\r\n    )\r\n\r\n    \r\nconst columns = useMemo(() => ([\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        sorter: {\r\n            compare: (a, b) => a.name.length - b.name.length,\r\n        },\r\n        ellipsis: true,\r\n    },\r\n    {\r\n        title: 'Designation',\r\n        dataIndex: 'designation',\r\n        key: 'designation',\r\n        sorter: {\r\n            compare: (a, b) => a.designation - b.designation,\r\n        },\r\n        ellipsis: true,\r\n    },\r\n    {\r\n        title: 'Action',\r\n        key: 'action',\r\n        render: (text, record) => (\r\n            <Space size=\"middle\">\r\n                <Button\r\n                onClick={() =>{\r\n                    navigate(`/portal/${moduleName}/${record.id}`)\r\n                }}\r\n                >{`Edit ${capitalize(moduleName)}`}</Button>\r\n                <Popconfirm\r\n                    title={`Are you sure to delete this ${moduleName}?`}\r\n                    onConfirm={() =>{onDelete(record.id)}}\r\n                    okText=\"Yes\"\r\n                    cancelText=\"No\"\r\n                >\r\n                    <Button\r\n                        danger\r\n                    >\r\n                        {`Delete ${capitalize(moduleName)}`}\r\n                    </Button>\r\n                </Popconfirm>\r\n            </Space>\r\n        ),\r\n        width: 300\r\n    }]), []);\r\n\r\n\r\n    if (loading) {\r\n        return (\r\n            <LoadingSpinner />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"user-page-header\">\r\n                <Typography.Title level={3}>{`${capitalize(moduleName)} Management`}</Typography.Title>\r\n                <Button type=\"primary\" onClick={openManageModal}>{`Add ${capitalize(moduleName)}`}</Button>\r\n            </div>\r\n            <Divider />\r\n            <Table \r\n                columns={columns}\r\n                dataSource={list}\r\n                loading={false}\r\n                size=\"middle\"\r\n                rowKey=\"id\"\r\n            />\r\n            {\r\n                showModal ?\r\n                <Modal onClose={closeManageModal} title=\"Manage User\">\r\n                    <Form\r\n                        onCancel={closeManageModal}\r\n                        onSubmit={onSubmit}\r\n                        defaultValues={find(list, (obj) => obj.id === keyId) || {}}\r\n                        loading={pending}\r\n                        options={{userList}}\r\n                    />\r\n                </Modal> :\r\n                null\r\n            }\r\n        </>\r\n    )\r\n}","import { Modal } from 'antd';\r\n\r\nexport default function WrappedModal(props) {\r\n    const {\r\n        onClose,\r\n        title\r\n    } = props;\r\n    return(\r\n        <Modal\r\n          title={title}\r\n          centered\r\n          visible\r\n          footer={null}\r\n          onCancel={onClose}\r\n        >\r\n          {props.children}\r\n        </Modal>\r\n    )\r\n}","import { Form, Input, Button, Select } from 'antd';\r\n\r\nimport './manage-form.css'\r\n\r\n/* eslint-disable no-template-curly-in-string */\r\nconst validateMessages = {\r\n  required: '${label} is required!',\r\n  types: {\r\n    email: '${label} is not a valid email!',\r\n  },\r\n  number: {\r\n    range: '${label} must be between ${min} and ${max}',\r\n  },\r\n};\r\n/* eslint-enable no-template-curly-in-string */\r\n\r\nexport default function ManageForm(props) {\r\n\r\n  const { defaultValues = {}, options = {}, onCancel, onSubmit, loading } = props\r\n\r\n  return (\r\n    <Form\r\n        layout=\"vertical\"\r\n        name=\"nest-messages\"\r\n        onFinish={onSubmit}\r\n        validateMessages={validateMessages}\r\n        validateTrigger=\"onSubmit\"\r\n    >\r\n        <Form.Item name={'name'} label=\"name\" rules={[{ required: true }]} initialValue={defaultValues.name}>\r\n            <Select>\r\n                { options.userList.length > 0 ? (\r\n                    options.userList.map(({name}) => (\r\n                        <Select.Option key={name} value={name}>{name}</Select.Option>\r\n                    ))\r\n                ) : null}\r\n            </Select>\r\n        </Form.Item>\r\n        <Form.Item name={'description'} label=\"Description\" rules={[{ required: true }]} initialValue={defaultValues.description}>\r\n            <Input />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <div className=\"user-manage-form-action-container\">\r\n            <Button type=\"primary\" htmlType=\"submit\" disabled={loading}>\r\n                Submit\r\n            </Button>\r\n            <Button onClick={onCancel} disabled={loading}>\r\n                Cancel\r\n            </Button>\r\n          </div>\r\n        </Form.Item>\r\n    </Form>\r\n  );\r\n};","import HttpClient from \"../../../modules/common/lib/http-client\";\r\nimport { errorLog } from \"../../../modules/common/lib/dev-util\";\r\nimport { moduleName } from \"../constants\";\r\n\r\nexport async function getApi() {\r\n    let response = {}\r\n    try {\r\n        const apiResponse = await HttpClient.get(`/${moduleName}/`);\r\n        if (apiResponse.status === 200) {\r\n            const { data = [] } = apiResponse;\r\n            response = { results: data };\r\n        }\r\n    } catch (error) {\r\n        errorLog(`get-${moduleName}-api`, error)\r\n        response = {\r\n            hasErrored: true,\r\n            errorMessage: error.message,\r\n            error,\r\n        }\r\n    } finally {\r\n        return response;\r\n    }\r\n}\r\n\r\nexport async function createApi({ name, description, imageUrl = '' }) {\r\n    let response = {}\r\n    try {\r\n        const apiResponse = await HttpClient.post(`/${moduleName}`, { name, description, imageUrl });\r\n        if (apiResponse.status === 201) {\r\n            response = apiResponse.data;\r\n        } else {\r\n            response = {\r\n                hasErrored: true,\r\n                errorMessage: apiResponse?.data?.message,\r\n            }\r\n        }\r\n    } catch (error) {\r\n        errorLog(`create-${moduleName}-api`, error)\r\n        response = {\r\n            hasErrored: true,\r\n            errorMessage: error.message,\r\n            error,\r\n        }\r\n    } finally {\r\n        return response;\r\n    }\r\n}\r\n\r\nexport async function updateApi(payload, value) {\r\n    let response = {}\r\n    try {\r\n        const apiResponse = await HttpClient.patch(`/${moduleName}/${value}`, payload);\r\n        if (apiResponse.status === 200) {\r\n            response = apiResponse.data;\r\n        } else {\r\n            response = {\r\n                hasErrored: true,\r\n                errorMessage: apiResponse?.data?.message,\r\n            }\r\n        }\r\n    } catch (error) {\r\n        errorLog(`update-${moduleName}-api`, error)\r\n        response = {\r\n            hasErrored: true,\r\n            errorMessage: error.message,\r\n            error,\r\n        }\r\n    } finally {\r\n        return response;\r\n    }\r\n}\r\n\r\nexport async function deleteApi(value) {\r\n    let response = {}\r\n    try {\r\n        const apiResponse = await HttpClient.delete(`/${moduleName}/${value}`);\r\n        if (apiResponse.status === 204) {\r\n            response = {};\r\n        } else {\r\n            response = {\r\n                hasErrored: true,\r\n                errorMessage: apiResponse.data.message,\r\n            }\r\n        }\r\n    } catch (error) {\r\n        errorLog(`delete-${moduleName}-api`, error)\r\n        response = {\r\n            hasErrored: true,\r\n            errorMessage: error.message,\r\n            error,\r\n        }\r\n    } finally {\r\n        return response;\r\n    }\r\n}\r\n\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { actionStatuses } from '../../../modules/common/constants/action-status.constants';\r\nimport { moduleName } from '../constants';\r\nimport { createApi, deleteApi, getApi, updateApi } from './api';\r\n\r\nconst initialState = {\r\n  list: [],\r\n  queryStatus: actionStatuses.IDLE,\r\n  mutationStatus: actionStatuses.IDLE\r\n}\r\n\r\nexport const getListService = createAsyncThunk(\r\n    `${moduleName}/getList`,\r\n    async () => {\r\n        const response = await getApi();\r\n        return response;\r\n    }\r\n);\r\n\r\nexport const upsertService = createAsyncThunk(\r\n    `${moduleName}/upsert`,\r\n    async ({name, description, imageUrl = '', id = null}) => {\r\n        let response = {};\r\n        if (id) {\r\n            response = await updateApi({name, description, imageUrl}, id);\r\n        } else {\r\n            response = await createApi({name, description, imageUrl});\r\n        }\r\n        return response;\r\n    }\r\n);\r\n\r\nexport const deleteService = createAsyncThunk(\r\n    `${moduleName}/delete`,\r\n    async (id = '') => {\r\n        const response = await deleteApi(id);\r\n        return response;\r\n    }\r\n);\r\n\r\nexport const slice = createSlice({\r\n  name: moduleName,\r\n  initialState,\r\n  extraReducers: (builder) => {\r\n    // Add reducers for additional action types here, and handle loading state as needed\r\n    builder.addCase(upsertService.pending, (state) => {\r\n      state.mutationStatus = actionStatuses.PENDING;\r\n    })\r\n    builder.addCase(upsertService.fulfilled, (state, action) => {\r\n      const { hasErrored = false } = action.payload;\r\n      if (hasErrored) {\r\n        state.mutationStatus = actionStatuses.REJECTED;\r\n      } else {\r\n        state.mutationStatus = actionStatuses.FULFILLED;\r\n      }\r\n    })\r\n\r\n    builder.addCase(getListService.pending, (state) => {\r\n      state.queryStatus = actionStatuses.PENDING;\r\n    })\r\n    builder.addCase(getListService.fulfilled, (state, action) => {\r\n      const { results, hasErrored = false } = action.payload;\r\n      if (hasErrored) {\r\n        state.queryStatus = actionStatuses.REJECTED;\r\n        state.list = [];\r\n      } else {\r\n        state.list = results;\r\n        state.queryStatus = actionStatuses.FULFILLED;\r\n      }\r\n    })\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\n// export const {} = authSlice.actions\r\n\r\nexport default slice.reducer\r\n\r\nexport { moduleName };","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { Button, Typography, Divider,Table, Space, Popconfirm, notification } from \"antd\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { find, capitalize } from \"lodash\";\r\n\r\nimport Modal from \"../components/modal\";\r\nimport Form from \"../components/form\";\r\n\r\nimport \"./page.css\";\r\nimport LoadingSpinner from \"../../common/components/loading-spinner\";\r\nimport { actionStatuses } from \"../../common/constants/action-status.constants\";\r\nimport { getListService, upsertService, deleteService, moduleName } from \"../services/slice\";\r\nimport { getUsersService } from \"../../users/services/user.slice\";\r\n\r\nexport { moduleName }\r\n\r\nexport default function UsersPage(params) {\r\n    \r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const list = useSelector(state => state[moduleName].list)\r\n    const userList = useSelector(state => state.user.list)\r\n    const loading = useSelector(state => state[moduleName].queryStatus === actionStatuses.PENDING)\r\n    const pending = useSelector(state => state[moduleName].mutationStatus === actionStatuses.PENDING)\r\n\r\n    const { keyId = \"\" } = useParams();\r\n    \r\n    const [showModal, setShowModal] = useState(Boolean(keyId));\r\n\r\n    useEffect(() => {\r\n        dispatch(getListService());\r\n        dispatch(getUsersService());\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (Boolean(keyId)) {\r\n            setShowModal(true)\r\n        } else {\r\n            setShowModal(false)\r\n        }\r\n    }, [keyId])\r\n\r\n    const closeManageModal = useCallback(\r\n        () => {\r\n            if (keyId) {\r\n                navigate(`/portal/${moduleName}`)\r\n            } else {\r\n                setShowModal(false)\r\n            }\r\n        },\r\n        [keyId, navigate]\r\n    )\r\n\r\n    const openManageModal = useCallback(\r\n        () => {\r\n            setShowModal(true)\r\n        },\r\n        [],\r\n    )\r\n\r\n    const onSubmit = useCallback(\r\n        ({name, description}) => {\r\n            dispatch(upsertService({name, description, id: keyId}))\r\n            .unwrap()\r\n            .then((result) => {\r\n                const { hasErrored = false } = result;\r\n                if (hasErrored) {\r\n                    notification.error({\r\n                        placement: 'topRight',\r\n                        message: `${keyId ? 'Updation' : 'Creation'} failed`,\r\n                        description: `${capitalize(moduleName)} ${keyId ? 'updation' : 'creation'} has failed`,\r\n                        duration: 3\r\n                    })\r\n                } else {\r\n                    closeManageModal();\r\n                    dispatch(getListService());\r\n                    notification.success({\r\n                        placement: 'topRight',\r\n                        message: `${keyId ? 'Updation' : 'Creation'} Success`,\r\n                        description: `${capitalize(moduleName)} ${keyId ? 'updation' : 'creation'} was successful`,\r\n                        duration: 3\r\n                    })\r\n                };\r\n            })\r\n            .catch((rejectedValueOrSerializedError) => {\r\n                notification.error({\r\n                    placement: 'topRight',\r\n                    message: `${keyId ? 'Updation' : 'Creation'} failed`,\r\n                    description: `${capitalize(moduleName)} ${keyId ? 'updation' : 'creation'} has failed`,\r\n                    duration: 3\r\n                })\r\n            })\r\n        },\r\n        [keyId, dispatch, closeManageModal],\r\n    )\r\n\r\n    const onDelete = useCallback(\r\n        (id) => {\r\n            dispatch(deleteService(id))\r\n            .unwrap()\r\n            .then((result) => {\r\n                const { hasErrored = false } = result;\r\n                if (hasErrored) {\r\n                    notification.error({\r\n                        placement: 'topRight',\r\n                        message: `Removal failed`,\r\n                        description: `${capitalize(moduleName)} removal has failed`,\r\n                        duration: 3\r\n                    })\r\n                } else {\r\n                    dispatch(getListService());\r\n                    notification.success({\r\n                        placement: 'topRight',\r\n                        message: `Removal Success`,\r\n                        description: `${capitalize(moduleName)} removal was successful`,\r\n                        duration: 3\r\n                    })\r\n                };\r\n            })\r\n            .catch((rejectedValueOrSerializedError) => {\r\n                notification.error({\r\n                    placement: 'topRight',\r\n                    message: `Removal failed`,\r\n                    description: `${capitalize(moduleName)} removal has failed`,\r\n                    duration: 3\r\n                })\r\n            })\r\n        },\r\n        [dispatch],\r\n    )\r\n\r\n    \r\nconst columns = useMemo(() => ([\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        sorter: {\r\n            compare: (a, b) => a.name.length - b.name.length,\r\n        },\r\n        ellipsis: true,\r\n    },\r\n    {\r\n        title: 'Description',\r\n        dataIndex: 'description',\r\n        key: 'description',\r\n        sorter: {\r\n            compare: (a, b) => a.description - b.description,\r\n        },\r\n        ellipsis: true,\r\n    },\r\n    {\r\n        title: 'Action',\r\n        key: 'action',\r\n        render: (text, record) => (\r\n            <Space size=\"middle\">\r\n                <Button\r\n                onClick={() =>{\r\n                    navigate(`/portal/${moduleName}/${record.id}`)\r\n                }}\r\n                >{`Edit ${capitalize(moduleName)}`}</Button>\r\n                <Popconfirm\r\n                    title={`Are you sure to delete this ${moduleName}?`}\r\n                    onConfirm={() =>{onDelete(record.id)}}\r\n                    okText=\"Yes\"\r\n                    cancelText=\"No\"\r\n                >\r\n                    <Button\r\n                        danger\r\n                    >\r\n                        {`Delete ${capitalize(moduleName)}`}\r\n                    </Button>\r\n                </Popconfirm>\r\n            </Space>\r\n        ),\r\n        width: 300\r\n    }]), []);\r\n\r\n\r\n    if (loading) {\r\n        return (\r\n            <LoadingSpinner />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"user-page-header\">\r\n                <Typography.Title level={3}>{`${capitalize(moduleName)} Management`}</Typography.Title>\r\n                <Button type=\"primary\" onClick={openManageModal}>{`Add ${capitalize(moduleName)}`}</Button>\r\n            </div>\r\n            <Divider />\r\n            <Table \r\n                columns={columns}\r\n                dataSource={list}\r\n                loading={false}\r\n                size=\"middle\"\r\n                rowKey=\"id\"\r\n            />\r\n            {\r\n                showModal ?\r\n                <Modal onClose={closeManageModal} title=\"Manage User\">\r\n                    <Form\r\n                        onCancel={closeManageModal}\r\n                        onSubmit={onSubmit}\r\n                        defaultValues={find(list, (obj) => obj.id === keyId) || {}}\r\n                        loading={pending}\r\n                        options={{userList}}\r\n                    />\r\n                </Modal> :\r\n                null\r\n            }\r\n        </>\r\n    )\r\n}","export function ListCoursePage(params) {\r\n    return 'list'\r\n}","import HttpClient from \"../../../modules/common/lib/http-client\";\r\nimport { errorLog } from \"../../../modules/common/lib/dev-util\";\r\nimport { moduleName } from \"../constants\";\r\n\r\nexport async function getApi() {\r\n    let response = {}\r\n    try {\r\n        const apiResponse = await HttpClient.get(`/${moduleName}/`);\r\n        if (apiResponse.status === 200) {\r\n            const { data = [] } = apiResponse;\r\n            response = { results: data };\r\n        }\r\n    } catch (error) {\r\n        errorLog(`get-${moduleName}-api`, error)\r\n        response = {\r\n            hasErrored: true,\r\n            errorMessage: error.message,\r\n            error,\r\n        }\r\n    } finally {\r\n        return response;\r\n    }\r\n}\r\n\r\nexport async function createApi(data) {\r\n    let response = {}\r\n    try {\r\n        const apiResponse = await HttpClient.post(`/${moduleName}`, data);\r\n        if (apiResponse.status === 201) {\r\n            response = apiResponse.data;\r\n        } else {\r\n            response = {\r\n                hasErrored: true,\r\n                errorMessage: apiResponse?.data?.message,\r\n            }\r\n        }\r\n    } catch (error) {\r\n        errorLog(`create-${moduleName}-api`, error)\r\n        response = {\r\n            hasErrored: true,\r\n            errorMessage: error.message,\r\n            error,\r\n        }\r\n    } finally {\r\n        return response;\r\n    }\r\n}\r\n\r\nexport async function updateApi(payload, step = 'basic', id) {\r\n    let response = {}\r\n    try {\r\n        const apiResponse = await HttpClient.patch(`/${moduleName}/${id}?step=${step}`, payload);\r\n        if (apiResponse.status === 200) {\r\n            response = apiResponse.data;\r\n        } else {\r\n            response = {\r\n                hasErrored: true,\r\n                errorMessage: apiResponse?.data?.message,\r\n            }\r\n        }\r\n    } catch (error) {\r\n        errorLog(`update-${moduleName}-api`, error)\r\n        response = {\r\n            hasErrored: true,\r\n            errorMessage: error.message,\r\n            error,\r\n        }\r\n    } finally {\r\n        return response;\r\n    }\r\n}\r\n\r\nexport async function deleteApi(id) {\r\n    let response = {}\r\n    try {\r\n        const apiResponse = await HttpClient.delete(`/${moduleName}/${id}`);\r\n        if (apiResponse.status === 204) {\r\n            response = {};\r\n        } else {\r\n            response = {\r\n                hasErrored: true,\r\n                errorMessage: apiResponse.data.message,\r\n            }\r\n        }\r\n    } catch (error) {\r\n        errorLog(`delete-${moduleName}-api`, error)\r\n        response = {\r\n            hasErrored: true,\r\n            errorMessage: error.message,\r\n            error,\r\n        }\r\n    } finally {\r\n        return response;\r\n    }\r\n}\r\n\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { actionStatuses } from '../../../modules/common/constants/action-status.constants';\r\nimport { moduleName } from '../constants';\r\nimport { createApi, deleteApi, getApi, updateApi } from './api';\r\n\r\nconst initialState = {\r\n  list: [],\r\n  queryStatus: actionStatuses.IDLE,\r\n  mutationStatus: actionStatuses.IDLE\r\n}\r\n\r\nexport const getListService = createAsyncThunk(\r\n    `${moduleName}/getList`,\r\n    async () => {\r\n        const response = await getApi();\r\n        return response;\r\n    }\r\n);\r\n\r\nexport const upsertService = createAsyncThunk(\r\n    `${moduleName}/upsert`,\r\n    async ({payload, id = null, step = 'basic'}) => {\r\n        let response = {};\r\n        if (id) {\r\n            response = await updateApi(payload, step, id);\r\n        } else {\r\n            response = await createApi(payload);\r\n        }\r\n        return response;\r\n    }\r\n);\r\n\r\nexport const deleteService = createAsyncThunk(\r\n    `${moduleName}/delete`,\r\n    async (id = '') => {\r\n        const response = await deleteApi(id);\r\n        return response;\r\n    }\r\n);\r\n\r\nexport const slice = createSlice({\r\n  name: moduleName,\r\n  initialState,\r\n  extraReducers: (builder) => {\r\n    // Add reducers for additional action types here, and handle loading state as needed\r\n    builder.addCase(upsertService.pending, (state) => {\r\n      state.mutationStatus = actionStatuses.PENDING;\r\n    })\r\n    builder.addCase(upsertService.fulfilled, (state, action) => {\r\n      const { hasErrored = false } = action.payload;\r\n      if (hasErrored) {\r\n        state.mutationStatus = actionStatuses.REJECTED;\r\n      } else {\r\n        state.mutationStatus = actionStatuses.FULFILLED;\r\n      }\r\n    })\r\n\r\n    builder.addCase(getListService.pending, (state) => {\r\n      state.queryStatus = actionStatuses.PENDING;\r\n    })\r\n    builder.addCase(getListService.fulfilled, (state, action) => {\r\n      const { results, hasErrored = false } = action.payload;\r\n      if (hasErrored) {\r\n        state.queryStatus = actionStatuses.REJECTED;\r\n        state.list = [];\r\n      } else {\r\n        state.list = results;\r\n        state.queryStatus = actionStatuses.FULFILLED;\r\n      }\r\n    })\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\n// export const {} = authSlice.actions\r\n\r\nexport default slice.reducer\r\n\r\nexport { moduleName };","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { Form, Input, Button, Select, Typography, Divider, Table, Space, Popconfirm, notification, Row, Col, InputNumber, Radio, DatePicker, Tabs } from \"antd\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { find, capitalize } from \"lodash\";\r\n\r\n\r\nimport \"./page.css\";\r\nimport LoadingSpinner from \"../../common/components/loading-spinner\";\r\nimport { actionStatuses } from \"../../common/constants/action-status.constants\";\r\nimport { getListService, upsertService, deleteService, moduleName } from \"../services/slice\";\r\nimport { getUsersService } from \"../../users/services/user.slice\";\r\nimport { getListService as getCategoriesService } from \"../../categories/services/slice\";\r\n\r\n\r\n\r\n/* eslint-disable no-template-curly-in-string */\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n      email: '${label} is not a valid email!',\r\n    },\r\n    number: {\r\n      range: '${label} must be between ${min} and ${max}',\r\n    },\r\n  };\r\n  /* eslint-enable no-template-curly-in-string */\r\n\r\nexport function UpsertCoursePage(params) {\r\n    \r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const { id = \"\" } = useParams();\r\n    const [panes, setPanes] = useState(initialPanes);\r\n    const [activeModuleTabKey, setActiveModuleTabKey] = useState(initialPanes);\r\n\r\n    let newModuleTabIndex = 0;\r\n\r\n    const userList = useSelector(state => state.user.list)\r\n    const categories = useSelector(state => state.category.list)\r\n    const loading = useSelector(state => state[moduleName].queryStatus === actionStatuses.PENDING)\r\n    const pending = useSelector(state => state[moduleName].mutationStatus === actionStatuses.PENDING)\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsersService());\r\n        dispatch(getCategoriesService());\r\n    }, [])\r\n\r\n    const onSubmit = useCallback(\r\n        (data) => {\r\n            console.log(data);\r\n            // dispatch(upsertService({name, description, id: keyId}))\r\n            // .unwrap()\r\n            // .then((result) => {\r\n            //     const { hasErrored = false } = result;\r\n            //     if (hasErrored) {\r\n            //         notification.error({\r\n            //             placement: 'topRight',\r\n            //             message: `${keyId ? 'Updation' : 'Creation'} failed`,\r\n            //             description: `${capitalize(moduleName)} ${keyId ? 'updation' : 'creation'} has failed`,\r\n            //             duration: 3\r\n            //         })\r\n            //     } else {\r\n            //         closeManageModal();\r\n            //         dispatch(getListService());\r\n            //         notification.success({\r\n            //             placement: 'topRight',\r\n            //             message: `${keyId ? 'Updation' : 'Creation'} Success`,\r\n            //             description: `${capitalize(moduleName)} ${keyId ? 'updation' : 'creation'} was successful`,\r\n            //             duration: 3\r\n            //         })\r\n            //     };\r\n            // })\r\n            // .catch((rejectedValueOrSerializedError) => {\r\n            //     notification.error({\r\n            //         placement: 'topRight',\r\n            //         message: `${keyId ? 'Updation' : 'Creation'} failed`,\r\n            //         description: `${capitalize(moduleName)} ${keyId ? 'updation' : 'creation'} has failed`,\r\n            //         duration: 3\r\n            //     })\r\n            // })\r\n        },\r\n        [id],\r\n    )\r\n\r\n    const onModuleTabChange = (activeKey) => {\r\n        setActiveModuleTabKey(activeKey);\r\n    }\r\n    \r\n    const onModuleTabEdit = () => {}\r\n\r\n    return(\r\n        <div className=\"course-upsert-container\">\r\n            <Form\r\n                layout=\"vertical\"\r\n                name=\"nest-messages\"\r\n                onFinish={onSubmit}\r\n                validateMessages={validateMessages}\r\n                validateTrigger=\"onSubmit\"\r\n            >\r\n                <Row gutter={16} style={{margin: 0}}>\r\n                    <Col span={8}>\r\n                    {/**initialValue={defaultValues.description} */}\r\n                        <Form.Item name={'title'} label=\"Course Title\" rules={[{ required: true }]} >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item name={'description'} label=\"Short Description\" rules={[{ required: true }]}>\r\n                            <Input.TextArea />\r\n                        </Form.Item>\r\n                        <Form.Item name={'author'} label=\"name\" rules={[{ required: true }]} >\r\n                            <Select>\r\n                                { userList.length > 0 ? (\r\n                                    userList.map(({name}) => (\r\n                                        <Select.Option key={name} value={name}>{name}</Select.Option>\r\n                                    ))\r\n                                ) : null}\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Form.Item name={\"durationValue\"} label=\"duration\" rules={[{ type: 'number', min: 1, max: 999, required: true }]}>\r\n                            <InputNumber />\r\n                        </Form.Item>\r\n                        <Form.Item name=\"durationType\" rules={[{ required: true, message: 'Please pick an item!' }]}>\r\n                            <Radio.Group>\r\n                                <Radio.Button value=\"HOURS\">Hours</Radio.Button>\r\n                                <Radio.Button value=\"DAYS\">Days</Radio.Button>\r\n                                <Radio.Button value=\"MONTHS\">Months</Radio.Button>\r\n                            </Radio.Group>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item name=\"courseType\" rules={[{ required: true, message: 'Please pick an item!' }]} label=\"Type\">\r\n                            <Radio.Group>\r\n                                <Radio.Button value=\"FREE\">Free</Radio.Button>\r\n                                <Radio.Button value=\"PAID\">Paid</Radio.Button>\r\n                            </Radio.Group>\r\n                        </Form.Item>\r\n                        \r\n                        <Form.Item name={\"brilliancePoints\"} label=\"Brilliance Points\" rules={[{ type: 'number', min: 0, max: 999, required: false }]}>\r\n                            <InputNumber />\r\n                        </Form.Item>\r\n                        \r\n                        <Form.Item name={\"sellingPrice\"} label=\"Selling Price\" rules={[{ type: 'number', min: 1, max: 99999, required: true }]}>\r\n                            <InputNumber />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item name={\"discountedPrice\"} label=\"Discounted Price\" rules={[{ type: 'number', min: 1, max: 99999, required: true }]}>\r\n                            <InputNumber />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <div>\r\n                            image\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Form.Item>\r\n                    <div className=\"user-manage-form-action-container\">\r\n                        <Button type=\"primary\" htmlType=\"submit\" disabled={loading}>\r\n                            Save\r\n                        </Button>\r\n                    </div>\r\n                </Form.Item>\r\n            </Form>\r\n            <Divider />\r\n            <Form\r\n                layout=\"vertical\"\r\n                name=\"nest-messages\"\r\n                onFinish={onSubmit}\r\n                validateMessages={validateMessages}\r\n                validateTrigger=\"onSubmit\"\r\n            >\r\n                <Row gutter={16} style={{margin: 0}}>\r\n                    <Col span={8}>\r\n                    {/**initialValue={defaultValues.description} */}\r\n                        <Form.Item name={'totalBatches'} label=\"Total Batches\" rules={[{ type: 'number', min: 1, max: 999, required: true }]} >\r\n                            <InputNumber />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name={[\"batchDates\", '0']}\r\n                            label=\"DatePicker\"\r\n                            rules={[\r\n                            {\r\n                            type: 'object',\r\n                            required: true,\r\n                            message: 'Please select time!',\r\n                            },\r\n                        ]}>\r\n                            <DatePicker />\r\n                        </Form.Item>\r\n                        <Form.Item name={'domain'} label=\"Main Domain\" rules={[{ required: true }]} >\r\n                            <Select>\r\n                                { categories.length > 0 ? (\r\n                                    categories.map(({key, label}) => (\r\n                                        <Select.Option key={key} value={key}>{label}</Select.Option>\r\n                                    ))\r\n                                ) : null}\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Form.Item name={'filters'} label=\"Advanced Filters\">\r\n                            <Select mode=\"tags\" />\r\n                        </Form.Item>\r\n                        <Form.Item name={'concepts'} label=\"You'll Learn/Concepts Covered\">\r\n                            <Select mode=\"tags\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <div>\r\n                            image\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Form.Item>\r\n                    <div className=\"user-manage-form-action-container\">\r\n                        <Button type=\"primary\" htmlType=\"submit\" disabled={loading}>\r\n                            Save\r\n                        </Button>\r\n                    </div>\r\n                </Form.Item>\r\n            </Form>\r\n            <Divider />\r\n            <div>\r\n                <Tabs\r\n                    type=\"editable-card\"\r\n                    onChange={onModuleTabChange}\r\n                    activeKey={activeModuleTabKey}\r\n                    onEdit={onModuleTabEdit}\r\n                    tabPosition={\"left\"}\r\n                >\r\n                    {panes.map(pane => (\r\n                    <Tabs.TabPane tab={pane.title} key={pane.key} closable={pane.closable}>\r\n                        <div className=\"course-section-container\">\r\n                            {pane.key}\r\n                        </div>\r\n                    </Tabs.TabPane>\r\n                    ))}\r\n                </Tabs>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst initialPanes = [\r\n    {\r\n      title: 'Module 1',\r\n      key: '1',\r\n      closable: false,\r\n    },\r\n    { title: 'Module 2', key: '2' },\r\n    { title: 'Module 3', key: '3' },\r\n  ];","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Select,\r\n  Typography,\r\n  Divider,\r\n  Table,\r\n  Space,\r\n  Popconfirm,\r\n  notification,\r\n  Row,\r\n  Col,\r\n  InputNumber,\r\n  Radio,\r\n  DatePicker,\r\n  Tabs,\r\n} from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nimport LoadingSpinner from \"../../common/components/loading-spinner\";\r\n\r\nimport {\r\n  getListService,\r\n  upsertService,\r\n  deleteService,\r\n  moduleName,\r\n} from \"../services/slice\";\r\nimport { getListService as getAuthors } from \"../../authors/services/slice\";\r\nimport { getListService as getCategoriesService } from \"../../categories/services/slice\";\r\n\r\nimport { actionStatuses } from \"../../common/constants/action-status.constants\";\r\n\r\nimport \"./page.css\";\r\n\r\n/* eslint-disable no-template-curly-in-string */\r\nconst validateMessages = {\r\n  required: \"${label} is required!\",\r\n  types: {\r\n    email: \"${label} is not a valid email!\",\r\n  },\r\n  number: {\r\n    range: \"${label} must be between ${min} and ${max}\",\r\n  },\r\n};\r\n/* eslint-enable no-template-curly-in-string */\r\n\r\nexport function UpsertCourseBasicDetailsPage() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { courseId = \"\" } = useParams();\r\n\r\n  const authorList = useSelector((state) => state.author.list);\r\n  const categories = useSelector((state) => state.category.list);\r\n  const loading = useSelector(\r\n    (state) => state[moduleName].queryStatus === actionStatuses.PENDING\r\n  );\r\n  const pending = useSelector(\r\n    (state) => state[moduleName].mutationStatus === actionStatuses.PENDING\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(getAuthors());\r\n    dispatch(getCategoriesService());\r\n  }, []);\r\n\r\n  const onSubmit = useCallback(\r\n    (data) => {\r\n      console.log(data);\r\n      // dispatch(upsertService({name, description, id: keyId}))\r\n      // .unwrap()\r\n      // .then((result) => {\r\n      //     const { hasErrored = false } = result;\r\n      //     if (hasErrored) {\r\n      //         notification.error({\r\n      //             placement: 'topRight',\r\n      //             message: `${keyId ? 'Updation' : 'Creation'} failed`,\r\n      //             description: `${capitalize(moduleName)} ${keyId ? 'updation' : 'creation'} has failed`,\r\n      //             duration: 3\r\n      //         })\r\n      //     } else {\r\n      //         closeManageModal();\r\n      //         dispatch(getListService());\r\n      //         notification.success({\r\n      //             placement: 'topRight',\r\n      //             message: `${keyId ? 'Updation' : 'Creation'} Success`,\r\n      //             description: `${capitalize(moduleName)} ${keyId ? 'updation' : 'creation'} was successful`,\r\n      //             duration: 3\r\n      //         })\r\n      //     };\r\n      // })\r\n      // .catch((rejectedValueOrSerializedError) => {\r\n      //     notification.error({\r\n      //         placement: 'topRight',\r\n      //         message: `${keyId ? 'Updation' : 'Creation'} failed`,\r\n      //         description: `${capitalize(moduleName)} ${keyId ? 'updation' : 'creation'} has failed`,\r\n      //         duration: 3\r\n      //     })\r\n      // })\r\n    },\r\n    [courseId]\r\n  );\r\n\r\n  return (\r\n    <div className=\"course-upsert-container\" id=\"course-upsert-basic\">\r\n      <Form\r\n        layout=\"vertical\"\r\n        name=\"nest-messages\"\r\n        onFinish={onSubmit}\r\n        validateMessages={validateMessages}\r\n        validateTrigger=\"onSubmit\"\r\n      >\r\n        <Row gutter={16} style={{ margin: 0, marginTop: \"3.5rem\" }}>\r\n          <Col className=\"basic-details-vertical-section\" span={8}>\r\n            <Typography.Title level={5}>Basic Information</Typography.Title>\r\n            {/**initialValue={defaultValues.description} */}\r\n            <Form.Item\r\n              name={\"title\"}\r\n              label=\"Course Title\"\r\n              rules={[{ required: true }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name={\"description\"}\r\n              label=\"Short Description\"\r\n              rules={[{ required: true }]}\r\n            >\r\n              <Input.TextArea rows={5} />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name={\"author\"}\r\n              label=\"Author\"\r\n              rules={[{ required: true }]}\r\n            >\r\n              <Select>\r\n                {authorList.length > 0\r\n                  ? authorList.map(({ name, id }) => (\r\n                      <Select.Option key={id} value={name}>\r\n                        {name}\r\n                      </Select.Option>\r\n                    ))\r\n                  : null}\r\n              </Select>\r\n            </Form.Item>\r\n            <Row justify=\"space-between\" align=\"bottom\">\r\n              <Form.Item\r\n                name={\"durationValue\"}\r\n                label=\"duration\"\r\n                rules={[{ type: \"number\", min: 1, max: 999, required: true }]}\r\n              >\r\n                <InputNumber />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"durationType\"\r\n                rules={[{ required: true, message: \"Please pick an item!\" }]}\r\n              >\r\n                <Radio.Group>\r\n                  <Radio.Button value=\"HOURS\">Hours</Radio.Button>\r\n                  <Radio.Button value=\"DAYS\">Days</Radio.Button>\r\n                  <Radio.Button value=\"MONTHS\">Months</Radio.Button>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n            </Row>\r\n          </Col>\r\n          <Col className=\"basic-details-vertical-section\" span={8}>\r\n            <Typography.Title level={5}>Price</Typography.Title>\r\n            <Form.Item\r\n              name=\"courseType\"\r\n              rules={[{ required: true, message: \"Please pick an item!\" }]}\r\n              label=\"Type\"\r\n            >\r\n              <Radio.Group>\r\n                <Radio.Button value=\"FREE\">Free</Radio.Button>\r\n                <Radio.Button value=\"PAID\">Paid</Radio.Button>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name={\"brilliancePoints\"}\r\n              label=\"Brilliance Points\"\r\n              rules={[{ type: \"number\", min: 0, max: 999, required: false }]}\r\n            >\r\n              <InputNumber />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name={\"sellingPrice\"}\r\n              label=\"Selling Price\"\r\n              rules={[{ type: \"number\", min: 1, max: 99999, required: true }]}\r\n            >\r\n              <InputNumber />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name={\"discountedPrice\"}\r\n              label=\"Discounted Price\"\r\n              rules={[{ type: \"number\", min: 1, max: 99999, required: true }]}\r\n            >\r\n              <InputNumber />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col className=\"basic-details-vertical-section\" span={8}>\r\n            <Typography.Title level={5}>Images</Typography.Title>\r\n            <div>image</div>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Col, Row, Steps } from \"antd\";\r\nimport React from \"react\";\r\nimport { UpsertCoursePage } from \".\";\r\nimport { UpsertCourseBasicDetailsPage } from \"./basic\";\r\n\r\nexport default function CreateCourceContainer({ step = 1 }) {\r\n  function getPage() {\r\n    // eslint-disable-next-line default-case\r\n    switch (step) {\r\n      case 1:\r\n        return <UpsertCourseBasicDetailsPage />;\r\n      case 2:\r\n        return <UpsertCoursePage />;\r\n      case 3:\r\n        return <UpsertCoursePage />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row\r\n        style={{ padding: \"2rem 1rem\" }}\r\n        justify=\"space-between\"\r\n        className=\"create-source-header\"\r\n      >\r\n        <Col span={16}>\r\n          <Steps size=\"default\" current={step - 1}>\r\n            <Steps.Step title=\"Step 1 - Basic Details\" />\r\n            <Steps.Step title=\"Step 2 - Batch Setup\" />\r\n            <Steps.Step title=\"Step 3 - Batch Setup\" />\r\n          </Steps>\r\n        </Col>\r\n        <Col className=\"create-source-header-actions\">\r\n          <Button style={{ marginRight: \"12px\" }}>Clear all</Button>\r\n          <Button type=\"primary\">Save & Next </Button>\r\n        </Col>\r\n      </Row>\r\n      {getPage(step)}\r\n    </>\r\n  );\r\n}\r\n","// import { useEffect } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  Routes,\r\n  Route,\r\n  useNavigate,\r\n  useLocation,\r\n  Navigate,\r\n} from \"react-router-dom\";\r\n\r\nimport AuthLayout from './modules/auth/components/auth-layout';\r\nimport LoginPage from './modules/auth/pages/login';\r\n\r\nimport Layout from \"./modules/common/components/layout\";\r\nimport Users from \"./modules/users/pages/users\";\r\nimport Categories, {\r\n  moduleName as CategoryModuleName,\r\n} from \"./modules/categories/pages/index.jsx\";\r\nimport Authors, {\r\n  moduleName as AuthorsModuleName,\r\n} from \"./modules/authors/pages/index.jsx\";\r\nimport Coaches, {\r\n  moduleName as CoachesModuleName,\r\n} from \"./modules/coaches/pages/index.jsx\";\r\nimport {\r\n  ListCoursePage,\r\n  UpsertCoursePage,\r\n  UpsertCourseBasicDetailsPage,\r\n  moduleName as CourseModuleName,\r\n} from \"./modules/courses/pages\";\r\n\r\nimport \"./App.css\";\r\nimport CreateCourceContainer from \"./modules/courses/pages/CreateSourceContainer\";\r\n\r\nconst App = () => {\r\n  // const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const currentUser = useSelector((store) => store.auth.user);\r\n\r\n  if (!currentUser.id && location.pathname.includes(\"portal\")) {\r\n    return <Navigate to=\"/auth/login\" state={{ from: location }} />;\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   if (!currentUser.id && location.pathname.includes('/portal')) {\r\n  //     navigate(\"/auth/login\", { replace: true, state:{ from: location } });\r\n  //   }\r\n  // }, [currentUser.id, navigate, location])\r\n\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/portal\" element={<Layout />}>\r\n        <Route index element={<p>home</p>} />\r\n\r\n        <Route path={`${CategoryModuleName}`} element={<Categories />} />\r\n        <Route path={`${CategoryModuleName}/:keyId`} element={<Categories />} />\r\n\r\n        <Route path={`${AuthorsModuleName}`} element={<Authors />} />\r\n        <Route path={`${AuthorsModuleName}/:keyId`} element={<Authors />} />\r\n\r\n        <Route path={`${CoachesModuleName}`} element={<Coaches />} />\r\n        <Route path={`${CoachesModuleName}/:keyId`} element={<Coaches />} />\r\n\r\n        <Route path={`${CourseModuleName}/list`} element={<ListCoursePage />} />\r\n        <Route\r\n          path={`${CourseModuleName}/create`}\r\n          element={<CreateCourceContainer />}\r\n        />\r\n        <Route\r\n          path={`${CourseModuleName}/basic/:courseId`}\r\n          element={<UpsertCourseBasicDetailsPage />}\r\n        />\r\n        <Route\r\n          path={`${CourseModuleName}/batch/:courseId`}\r\n          element={<UpsertCoursePage />}\r\n        />\r\n        <Route\r\n          path={`${CourseModuleName}/module/:courseId`}\r\n          element={<UpsertCoursePage />}\r\n        />\r\n        <Route\r\n          path={`${CourseModuleName}/thumbnail/:courseId`}\r\n          element={<UpsertCoursePage />}\r\n        />\r\n\r\n        <Route path=\"users\" element={<Users />} />\r\n        <Route path=\"users/:userId\" element={<Users />} />\r\n        {/*\r\n          Using path=\"*\"\" means \"match anything\", so this route\r\n          acts like a catch-all for URLs that we don't have explicit\r\n          routes for.\r\n        */}\r\n        <Route path=\"*\" element={<p>home</p>} />\r\n      </Route>\r\n      <Route path=\"/auth\" element={<AuthLayout />} >\r\n        <Route path=\"login\" element={<LoginPage />} />\r\n        {/*\r\n          Using path=\"*\"\" means \"match anything\", so this route\r\n          acts like a catch-all for URLs that we don't have explicit\r\n          routes for.\r\n        */}\r\n        <Route path=\"*\" element={<p>404</p>} />\r\n      </Route>\r\n      <Route path=\"*\" element={<Navigate to=\"/auth/login\" replace />} />\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport authReducer from '../services/auth/auth.slice';\r\nimport userReducer from '../../users/services/user.slice';\r\nimport categoryReducer, { moduleName as categoriesModuleName } from '../../categories/services/slice';\r\nimport authorReducer, { moduleName as authorsModuleName } from '../../authors/services/slice';\r\nimport coachReducer, { moduleName as coachModuleName } from '../../coaches/services/slice';\r\nimport courseReducer, { moduleName as courseModuleName } from '../../courses/services/slice';\r\n\r\nconst reducer = {\r\n  auth: authReducer,\r\n  user: userReducer,\r\n  [categoriesModuleName]: categoryReducer,\r\n  [authorsModuleName]: authorReducer,\r\n  [coachModuleName]: coachReducer,\r\n  [courseModuleName]: courseReducer,\r\n}\r\n\r\nexport default configureStore({\r\n  reducer,\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport App from './App';\r\nimport store from './modules/common/lib/redux-store';\r\n\r\nimport 'antd/dist/antd.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);"],"sourceRoot":""}